//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.442, BuildTime: 2023-12-27T19:00:48Z)
//
//    - LC_BUILD_VERSION:  Platform: macOS, MinOS: 13.0, SDK: 14.0, Tool: ld (1022.1)
//    - LC_SOURCE_VERSION: 22540.0.0.0.0
//
#ifndef DVTTextAnnotation_h
#define DVTTextAnnotation_h
#import <Foundation/Foundation.h>

#include "DVTAnnotation.h"
#include "DVTSourceLandmarkItemProtocol-Protocol.h"
#include "DVTTextAnnotationAccessibilityProxyItem.h"

@class DVTMutableRangeArray, DVTTextDocumentLocation, NSArray, NSImage, NSMutableArray, NSMutableDictionary, NSString;
@protocol DVTSourceLandmarkItemContainer, DVTLineRangeCharacterRangeConverter, DVTTextAnnotationDelegate, DVTTextAnnotationDisplayDelegate;

@interface DVTTextAnnotation : DVTAnnotation {
  /* instance variables */
  NSMutableDictionary *_themesByState;
  unsigned long long _paragraphHash;
  struct { unsigned int drawsSidebarMarker :1 ; unsigned int sidebarMarkerAlignment :4 ; unsigned int wantsDisplayOverLineNumber :1 ; unsigned int wantsReplaceLineNumber :1 ; unsigned int wantsInvertedLineNumber :1 ; unsigned int shouldDrawTemplateInverted :1 ; unsigned int lineHighlightVisible :1 ; unsigned int highlightedRangesVisible :1 ; unsigned int userDraggable :1 ; unsigned int userRemovable :1 ; unsigned int isParagraphEdited :1 ; unsigned int usesFirstLineFragmentMode :1 ; unsigned int hasCaretRanges :1 ; unsigned int hasCaretRangesIsValid :1 ; } _taFlags;
}

@property (readonly) NSArray *layoutManagers;
@property BOOL highlightedRangesVisible;
@property (copy) NSArray *highlightedRanges;
@property (readonly) BOOL hasCaretRanges;
@property (retain, nonatomic) DVTTextDocumentLocation *location;
@property (copy) NSArray *secondaryLocations;
@property (readonly) struct _NSRange paragraphRange;
@property BOOL paragraphEdited;
@property BOOL usesFirstLineFragmentMode;
@property unsigned long long severity;
@property int annotationStackPolicy;
@property (readonly) BOOL wantsMergeAnnotations;
@property (retain, nonatomic) DVTTextAnnotationAccessibilityProxyItem *accessibilityProxy;
@property (retain) NSObject<DVTTextAnnotationDelegate> *delegate;
@property (weak) NSObject<DVTTextAnnotationDisplayDelegate> *displayDelegate;
@property BOOL userDraggable;
@property BOOL userRemovable;
@property (retain, nonatomic) NSImage *sidebarMarkerImage;
@property (retain, nonatomic) NSImage *sidebarMarkerImageBorderMask;
@property BOOL drawsSidebarMarker;
@property unsigned long long sidebarMarkerAlignment;
@property double sidebarMarkerVerticalPadding;
@property (nonatomic) double sidebarMarkerHorizontalOffset;
@property (nonatomic) double sidebarMarkerOpacity;
@property BOOL wantsDisplayOverLineNumber;
@property BOOL wantsReplaceLineNumber;
@property BOOL wantsInvertedLineNumber;
@property BOOL shouldDrawTemplateInverted;
@property (copy) NSString *toolTip;
@property (weak) NSObject<DVTSourceLandmarkItemContainer, DVTLineRangeCharacterRangeConverter> *landmarkProvider;
@property (readonly) NSObject<DVTSourceLandmarkItemProtocol> *enclosingLandmarkItem;
@property BOOL lineHighlightVisible;
@property (nonatomic) unsigned long long highlightSidebarStyle;
@property unsigned long long scrollbarMarkerType;
@property (readonly) struct CGRect lastSidebarMarkerRect;
@property (readonly) BOOL allowSidebarMarkerInAccessoryLinePresentations;
@property (readonly) BOOL shouldShowInSidebar;
@property BOOL lazyInvalidation;

/* class methods */
+ (void)initialize;
+ (id)logAspect;
+ (void)sortAndFilterSupressedAnnotationsInArray:(id)array usingComparisonSelector:(SEL)selector;
+ (void)drawLineHighlightForAnnotations:(id)annotations highlightRanges:(BOOL)ranges textView:(id)view getParaRectBlock:(id /* block */)block;

/* instance methods */
- (id)init;
- (void)dealloc;
- (void)addLayoutManager:(id)manager;
- (void)removeLayoutManager:(id)manager;
- (BOOL)isParagraphEdited;
- (void)resolveLocationIfNeededForLayoutManager:(id)manager;
- (id)themeForState:(id)state;
- (void)setTheme:(id)theme forState:(id)state;
- (void)setVisibleWithoutAdditionalLayout:(BOOL)layout;
- (void)setVisible:(BOOL)visible;
- (id)sidebarMarkerImageForSize:(struct CGSize)size;
- (void)setSidebarMarkerTopMargin:(double)margin;
- (BOOL)isLineHighlightVisible;
- (BOOL)lineHighlightIncludesLineSpacing;
- (id)_highlightedRanges;
- (BOOL)isHighlightedRangesVisible;
- (void)insertObject:(id)object inHighlightedRangesAtIndex:(unsigned long long)index;
- (void)removeObjectFromHighlightedRangesAtIndex:(unsigned long long)index;
- (void)addHighlightedRange:(struct _NSRange)range;
- (void)insertHighlightedRange:(struct _NSRange)range atIndex:(long long)index;
- (void)removeHighlightedRangeAtIndex:(long long)index;
- (void)removeHighlightedRange:(struct _NSRange)range;
- (void)removeAllHighlightedRanges;
- (void)synchronizeHighlightedRangesWithLocationsForTextStorage:(id)storage;
- (void)synchronizeParagraphHash;
- (BOOL)isUserDraggable;
- (BOOL)isUserRemovable;
- (void)deriveParagraphRangeFromLocation;
- (long long)compareParagraphRange:(id)range;
- (void)annotationWillDrawInTextView:(id)view;
- (void)drawSidebarMarkerIconInRect:(struct CGRect)rect textView:(id)view;
- (BOOL)drawsLineHighlight;
- (void)drawLineHighlightInRect:(struct CGRect)rect textView:(id)view;
- (BOOL)drawsHighlightedRanges;
- (void)drawHighlightedRangesInRect:(struct CGRect)rect textView:(id)view;
- (id)currentStateInTextView:(id)view;
- (struct CGRect)sidebarMarkerRectForFirstLineRect:(struct CGRect)rect;
- (long long)comparePrecedenceAndLayering:(id)layering;
- (void)setNeedsInvalidate;
- (void)invalidateDisplayAndLayoutIfNeeded:(BOOL)needed;
- (void)fontAndColorThemeChanged:(id)changed;
- (id)description;
- (void)adjustParagraphIndexBy:(long long)by lengthBy:(long long)by;
- (BOOL)isFocusedInTextView:(id)view;
- (id)annotationDisplayDescription;
@end

#endif /* DVTTextAnnotation_h */
