//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.442, BuildTime: 2023-12-27T19:00:48Z)
//
//    - LC_BUILD_VERSION:  Platform: macOS, MinOS: 13.0, SDK: 14.0, Tool: ld (1022.1)
//    - LC_SOURCE_VERSION: 22551.0.0.0.0
//
#ifndef IDEFindNavigatorQueryParametersController_h
#define IDEFindNavigatorQueryParametersController_h
#import <Foundation/Foundation.h>

#include "IDEViewController.h"
#include "DVTFindPatternManager-Protocol.h"
#include "DVTInvalidation-Protocol.h"
#include "IDEFindNavigatorPathControl.h"
#include "IDEFindNavigatorPathControlDelegate-Protocol.h"
#include "IDEFindNavigatorScopeChooserController.h"
#include "IDEFindNavigatorScopeChooserControllerDelegate-Protocol.h"
#include "IDEFindNavigatorTwoControlLeftPriorityLayout.h"
#include "IDEProgressSearchField.h"

@class DVTDelayedInvocation, DVTInsetView, DVTScopeBarButton, IDEBatchFindNamedScope, IDEBatchFindQueryTerm, NSButton, NSPopUpButton, NSString, NSView;
@protocol IDEFindNavigatorQueryParametersPresentedController, IDEFindNavigatorQueryParametersControllerDelegate;

@interface IDEFindNavigatorQueryParametersController : IDEViewController<IDEFindNavigatorPathControlDelegate, IDEFindNavigatorScopeChooserControllerDelegate, DVTFindPatternManager, NSTextFieldDelegate> {
  /* instance variables */
  DVTInsetView *_modeRow;
  IDEFindNavigatorPathControl *_modePathControl;
  NSView *_queryTextSearchFieldRow;
  IDEProgressSearchField *_queryTextSearchField;
  NSView *_replaceFieldRow;
  IDEProgressSearchField *_replaceField;
  NSButton *_replaceButton;
  NSButton *_replaceAllButton;
  NSView *_scopeAndCaseMatchingRow;
  IDEFindNavigatorTwoControlLeftPriorityLayout *_textOptionsAndScopeContainer;
  NSPopUpButton *_caseMatchingChooserPopUp;
  DVTScopeBarButton *_showScopesButton;
  NSView *_symbolOptionsRow;
  NSButton *_includeReferencesCheckbox;
  NSView *_typeHierarchyOptionsRow;
  NSButton *_includeSymbolMembersCheckbox;
  IDEBatchFindQueryTerm *_selectedQueryTerm;
  long long _selectedQueryAction;
  Class _selectedQueryClass;
  Class _lastEasyToInitiateQueryClass;
  IDEBatchFindNamedScope *_selectedNamedScope;
  long long _selectedAnchoring;
  BOOL _selectedMatchCase;
  BOOL _selectedIncludeSymbolMembers;
  BOOL _selectedIncludeSymbolReferences;
  IDEFindNavigatorScopeChooserController *_scopeChooser;
  NSObject<DVTInvalidation> *_findStateObservationTokens;
  DVTDelayedInvocation *_userInterfaceValidator;
}

@property (weak) NSObject<IDEFindNavigatorQueryParametersControllerDelegate> *delegate;
@property (nonatomic) long long progress;
@property (retain, nonatomic) IDEViewController<IDEFindNavigatorQueryParametersPresentedController> *presentedController;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (void)configureStateSavingObjectPersistenceByName:(id)name;

/* instance methods */
- (id)initWithNibName:(id)name bundle:(id)bundle;
- (BOOL)automaticallyInvalidatesChildViewControllers;
- (void)primitiveInvalidate;
- (void)commitStateToDictionary:(id)dictionary;
- (void)revertStateWithDictionary:(id)dictionary;
- (id)attributedStringForTitle:(id)title control:(id)control accented:(BOOL)accented;
- (void)refreshUserInterface:(id)interface;
- (void)pathControlShouldRefresh:(id)refresh;
- (id)view;
- (void)pullFindTextFromSharedFindState;
- (void)pullReplaceTextFromSharedFindState;
- (void)viewDidInstall;
- (void)viewDidLoad;
- (void)scheduleUIRefreshConditionallyInvalidatingSavedState:(BOOL)state notifyOfExportedStateChange:(BOOL)change;
- (void)userChooseIncludeReferences:(id)references;
- (void)userChooseIncludeSymbolMembers:(id)members;
- (void)userChooseCaseMatching:(id)matching;
- (void)beginQuery:(id)query;
- (id)replacementText;
- (void)replaceSelectedItems:(id)items;
- (void)replaceAllItems:(id)items;
- (void)dismissPresentedController;
- (void)chooseScope:(id)scope;
- (void)controlTextDidChange:(id)change;
- (id)currentQuerySpecification;
- (void)initiateQuery;
- (void)selectQueryClass:(Class)class;
- (void)selectQueryAction:(long long)action;
- (void)selectQueryAnchoring:(long long)anchoring;
- (void)selectMatchCase:(BOOL)caseNot;
- (void)selectIncludeSymbolMembers:(BOOL)members;
- (void)selectIncludeSymbolReferences:(BOOL)references;
- (Class)preferredEasilyManuallyInitiatableQueryClass;
- (void)prepareForExternallyInvokedTextualQuery;
- (BOOL)focusFindFieldAfterPreparingTheNavigatorForFocus;
- (void)enterQueryTerm:(id)term;
- (void)enterFindText:(id)text;
- (void)selectNamedScope:(id)scope;
- (id)menuItemForHistoryQuery:(id)query withFont:(id)font;
- (id)insertPatternMenuItemWithAction:(SEL)action;
- (id)findFieldMenu;
- (id)replaceFieldMenu;
- (void)clearSearchHistory:(id)history;
- (void)selectQuerySpecification:(id)specification honorQueryTerm:(BOOL)term;
- (void)userDidSelectHistoricQuery:(id)query;
- (void)insertFindPatternForField:(id)field;
- (void)insertReplacePattern:(id)pattern;
- (void)insertFindPattern:(id)pattern;
- (id)findFieldForField:(id)field;
- (id)replaceFieldForField:(id)field;
- (BOOL)supportsPatterns;
- (void)scoperChooserUserDidChooseScope:(id)scope;
- (void)scoperChooserUserDidInitiateQuery:(id)query;
- (id)pathControlSegments:(id)segments;
- (id)pathControl:(id)control valueForSegment:(id)segment;
- (id)pathControl:(id)control accessibilityIdentifierForSegment:(id)segment;
- (id)pathControl:(id)control candidatesForSegment:(id)segment;
- (id)pathControl:(id)control titleForValue:(id)value ofSegment:(id)segment;
- (BOOL)pathControl:(id)control shouldHighlightSelectionForValue:(id)value ofSegment:(id)segment;
- (void)pathControl:(id)control userChoseValue:(id)value forSegment:(id)segment;
@end

#endif /* IDEFindNavigatorQueryParametersController_h */
