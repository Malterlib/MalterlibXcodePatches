//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.442, BuildTime: 2023-12-27T19:00:48Z)
//
//    - LC_BUILD_VERSION:  Platform: macOS, MinOS: 13.0, SDK: 14.0, Tool: ld (1022.1)
//    - LC_SOURCE_VERSION: 22551.0.0.0.0
//
#ifndef IDERunDestination_h
#define IDERunDestination_h
#import <Foundation/Foundation.h>

#include "XCTHDevice-Protocol.h"
#include "XCTHRunDestination-Protocol.h"

@class DVTDevice, DVTPlatform, DVTSDK, DVTSDKVariant, NSArray, NSError, NSString;
@protocol XCTHSDK;

@interface IDERunDestination : NSObject<XCTHRunDestination, NSCopying>

@property (readonly) BOOL isGenericDestinationWithMissingPlatform;
@property (readonly) BOOL supportsBuildingWithMissingPlatform;
@property (readonly) NSObject<XCTHDevice> *targetDevice;
@property (readonly) NSObject<XCTHSDK> *targetSDK;
@property (readonly) BOOL isMacDesignedForiPad;
@property (readonly, copy) NSString *targetArchitecture;
@property (readonly, copy) NSString *displayName;
@property (readonly, copy) NSString *fullDisplayName;
@property (readonly, copy) NSString *effectiveOperatingSystemVersion;
@property (readonly) DVTSDKVariant *targetSDKVariant;
@property (readonly) DVTPlatform *hostTargetedPlatform;
@property (readonly) NSString *targetIdentifier;
@property (readonly) BOOL isTargetDeviceEligible;
@property (readonly) NSError *deviceIneligibilityError;
@property (readonly) NSString *displayableIneligibilityMessage;
@property (readonly) NSString *displayableIneligibilityLongDescription;
@property (readonly) BOOL isMacCatalyst;
@property (readonly) BOOL is89920885;
@property (readonly) BOOL isRosetta;
@property (readonly) BOOL isAppleSilicon;
@property (readonly) NSArray *nativeOrRosettaCounterparts;

/* class methods */
+ (id)keyPathsForValuesAffectingDisplayName;
+ (id)keyPathsForValuesAffectingFullDisplayName;
+ (id)fallbackActiveArchitectureForBuildArchitectures:(id)architectures;

/* instance methods */
- (id)initWithTargetDevice:(id)device architecture:(id)architecture SDK:(id)sdk;
- (id)initWithTargetDevice:(id)device architecture:(id)architecture SDK:(id)sdk SDKVariant:(id)sdkvariant;
- (id)initWithTargetDevice:(id)device architecture:(id)architecture SDK:(id)sdk SDKVariant:(id)sdkvariant hostTargetedPlatform:(id)platform;
- (id)initWithIneligibleTargetDevice:(id)device architecture:(id)architecture SDK:(id)sdk SDKVariant:(id)sdkvariant deviceIneligibilityError:(id)error;
- (id)copyWithZone:(struct _NSZone *)zone;
- (BOOL)isEqual:(id)equal;
- (unsigned long long)hash;
- (long long)compare:(id)compare;
- (id)displayNameAdditionsWithScheme:(id)scheme;
- (id)fullDisplayNameWithScheme:(id)scheme;
- (id)description;
- (unsigned long long)_architectureType;
- (id)_destinationWithArchitecture:(id)architecture;
- (id)displayOrder;
- (id)targetDeviceForSorting;
- (id)targetSDKForSorting;
- (id)targetSDKVariantForSorting;
- (unsigned long long)targetArchitectureForSorting;
- (id)coreDeviceLaunchWorkerForLaunchSession:(id)session;
- (id)runWorkerForLaunchSession:(id)session error:(id *)error;
- (id)debugWorkerForLaunchSession:(id)session error:(id *)error;
- (id)legacy_runWorkerForLaunchSession:(id)session error:(id *)error;
- (id)runOperationForLaunchSession:(id)session error:(id *)error;
- (id)debugOperationForLaunchSession:(id)session error:(id *)error;
- (id)attachOperationForLaunchSession:(id)session error:(id *)error;
- (id)activeArchitectureForBuildArchitectures:(id)architectures;
- (BOOL)canRunMultipleInstancesPerApp;
@end

#endif /* IDERunDestination_h */
