//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.442, BuildTime: 2023-12-27T19:00:48Z)
//
//    - LC_BUILD_VERSION:  Platform: macOS, MinOS: 13.0, SDK: 14.0, Tool: ld (1022.1)
//    - LC_SOURCE_VERSION: 22551.0.0.0.0
//
#ifndef IDEProvisioningManager_h
#define IDEProvisioningManager_h
#import <Foundation/Foundation.h>

#include "DVTInvalidation-Protocol.h"
#include "IDEProvisionableProvider-Protocol.h"
#include "IDEProvisioningLedger.h"
#include "IDEProvisioningManagerContext.h"
#include "IDEProvisioningMechanicContextProvider-Protocol.h"
#include "IDEProvisioningMechanicDelegate-Protocol.h"
#include "IDEProvisioningTeamAccountPairProvider-Protocol.h"
#include "IDEProvisioningTeamManager.h"
#include "IDEProvisioningUserAction.h"
#include "IDESigningEditorProvisionableManagerProvider-Protocol.h"

@class DVTDispatchLock, DVTLogAspect, DVTPerformanceMetric, DVTStackBacktrace, NSMapTable, NSMutableSet, NSSet, NSString;
@protocol DVTProvisioningProfileManagerProtocol, DVTSigningCertificateManagerProtocol, IDEProvisioningManagerDelegate, OS_dispatch_queue;

@interface IDEProvisioningManager : NSObject<IDEProvisioningMechanicDelegate, DVTInvalidation, IDESigningEditorProvisionableManagerProvider, IDEProvisioningMechanicContextProvider> {
  /* instance variables */
  DVTDispatchLock *_onDemandEvaluationFuturesLock;
  NSMutableSet *_onDemandEvaluationFutures;
}

@property (retain, nonatomic) IDEProvisioningManagerContext *context;
@property (retain, nonatomic) NSMapTable *provisionablesToManagers;
@property (retain, nonatomic) DVTLogAspect *logAspect;
@property (nonatomic) BOOL finishedInitialProvisionableLoading;
@property (retain, nonatomic) DVTPerformanceMetric *loadingMetric;
@property (readonly, nonatomic) DVTDispatchLock *repairLock;
@property (readonly, nonatomic) NSMapTable *repairablesToObservers;
@property (readonly, nonatomic) NSMapTable *observersToRepairables;
@property (readonly, nonatomic) NSMapTable *repairableToRepairState;
@property (retain, nonatomic) IDEProvisioningUserAction *delegateApprovedUserAction;
@property (retain, nonatomic) NSObject<IDEProvisionableProvider> *provisionableProvider;
@property (weak, nonatomic) NSObject<IDEProvisioningManagerDelegate> *delegate;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *delegateCallbackQueue;
@property (readonly, nonatomic) NSSet *provisionableDestinations;
@property (readonly, nonatomic) IDEProvisioningLedger *ledger;
@property (readonly, nonatomic) NSSet *provisionableManagers;
@property (readonly, nonatomic) IDEProvisioningTeamManager *teamManager;
@property (readonly, nonatomic) NSObject<DVTProvisioningProfileManagerProtocol> *profileManager;
@property (readonly, nonatomic) NSObject<DVTSigningCertificateManagerProtocol> *certificateManager;
@property (readonly, nonatomic) NSObject<IDEProvisioningTeamAccountPairProvider> *teamAccountPairProvider;
@property (readonly, nonatomic) BOOL valid;
@property (readonly) DVTStackBacktrace *invalidationBacktrace;
@property (retain) DVTStackBacktrace *creationBacktrace;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly) BOOL finishedLoading;

/* class methods */
+ (void)initialize;
+ (BOOL)supportsInvalidationPrevention;
+ (id)keyPathsForValuesAffectingFinishedLoading;
+ (BOOL)supportCommandLineRepairs;
+ (void)setSupportCommandLineRepairs:(BOOL)repairs;
+ (BOOL)automaticallyRegisterDevices;
+ (void)setAutomaticallyRegisterDevices:(BOOL)devices;
+ (id)requiredProvisionableDestinations;
+ (void)setRequiredProvisionableDestinations:(id)destinations;
+ (id)keyPathsForValuesAffectingProvisionableDestinations;

/* instance methods */
- (id)init;
- (id)_newMechanicWithProvisionignContext:(id)context;
- (id)_defaultContext;
- (id)initWithProvisionableProvider:(id)provider;
- (id)initWithProvisionableProvider:(id)provider provisioningContext:(id)context;
- (id)initWithProvisionableProvider:(id)provider context:(id)context;
- (void)_commonInit;
- (void)primitiveInvalidate;
- (id)mechanic;
- (id)managerForProvisionable:(id)provisionable;
- (void)_setUpObservations;
- (void)_finishedLoading;
- (void)_provisionablesChanged;
- (BOOL)isFinishedLoading;
- (id)teamsForScheme:(id)scheme commands:(id)commands buildConfiguration:(id)configuration;
- (void)waitUntilFinished;
- (id)evaluateProvisioningForProvisionable:(id)provisionable overrides:(id)overrides destinationRequirement:(id)requirement isXBS:(BOOL)xbs;
- (void)setRepairables:(id)repairables forObserver:(id)observer;
- (void)setRepairables:(id)repairables forObserver:(id)observer repairStateCallback:(id /* block */)callback;
- (void)setRepairables:(id)repairables forObserver:(id)observer retryExistingRepairs:(BOOL)repairs repairStateCallback:(id /* block */)callback;
- (void)_addObserver:(id)observer forRepairable:(id)repairable;
- (void)_removeObserver:(id)observer forRepairable:(id)repairable;
- (id)_allRepairables;
- (id)_repairablesForObserver:(id)observer;
- (id)_observersForRepairable:(id)repairable;
- (void)_performStateUpdateOnMainThreadForRepairable:(id)repairable updateBlock:(id /* block */)block;
- (void)repairPendingForRepairable:(id)repairable;
- (void)repairDidBeginForRepairable:(id)repairable;
- (void)repairForRepairable:(id)repairable isExecutingStep:(id)step;
- (void)repairDidFinishForRepairable:(id)repairable;
- (void)repairForRepairable:(id)repairable didFailWithError:(id)error;
- (BOOL)_doesDelegateAuthorizeOrPendUserAction:(id)action repairable:(id)repairable observers:(id)observers;
- (void)repairForRepairable:(id)repairable requiresUserAction:(id)action;
- (void)repairUserActionDidBeginForRepairable:(id)repairable;
- (void)_userActionFinished:(id)finished;
- (void)repairUserAction:(id)action didFinishForRepairable:(id)repairable;
- (void)repairForRepairable:(id)repairable userAction:(id)action didFailWithError:(id)error;
- (void)setDelegate:(id)delegate callbackQueue:(id)queue;
@end

#endif /* IDEProvisioningManager_h */
