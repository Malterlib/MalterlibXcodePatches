//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.442, BuildTime: 2023-12-27T19:00:48Z)
//
//    - LC_BUILD_VERSION:  Platform: macOS, MinOS: 13.0, SDK: 14.0, Tool: ld (1022.1)
//    - LC_SOURCE_VERSION: 22551.0.0.0.0
//
#ifndef IDEBreakpointManager_h
#define IDEBreakpointManager_h
#import <Foundation/Foundation.h>

#include "DVTInvalidation-Protocol.h"
#include "IDEBreakpointBucket.h"
#include "IDEBreakpointDelegate-Protocol.h"
#include "IDEWorkspace.h"

@class DVTDispatchLock, DVTObservingToken, DVTStackBacktrace, DVTTimeSlicedMainThreadWorkQueue, NSArray, NSMapTable, NSMutableArray, NSMutableSet, NSString;

@interface IDEBreakpointManager : NSObject<IDEBreakpointDelegate, DVTInvalidation> {
  /* instance variables */
  DVTObservingToken *_workspaceReferencedContainersToken;
  DVTObservingToken *_currentDebugSessionObserverToken;
  DVTObservingToken *_currentDebugSessionStateObserverToken;
  NSMapTable *_bucketsToObserverTokens;
  IDEBreakpointBucket *_watchpointBucket;
  NSMapTable *_userToSharedBuckets;
  NSMapTable *_sharedToUserBuckets;
  DVTTimeSlicedMainThreadWorkQueue *_breakpointIdentifierChangedQueue;
  DVTDispatchLock *_registrationLock;
  unsigned long long _registrationNumber;
  NSMutableArray *_breakpointsToBeInvalidated;
  NSMutableSet *_breakpointObservers;
}

@property (readonly) IDEWorkspace *workspace;
@property (retain, ) NSArray *userProjectBuckets;
@property (readonly, ) NSMutableArray *mutableUserProjectBuckets;
@property (retain, ) NSArray *sharedProjectBuckets;
@property (readonly, ) NSMutableArray *mutableSharedProjectBuckets;
@property (readonly, ) NSMutableArray *mutableBreakpoints;
@property (copy, ) NSArray *breakpoints;
@property (retain, nonatomic) IDEBreakpointBucket *defaultBucket;
@property (readonly) IDEBreakpointBucket *userWorkspaceBucket;
@property (readonly) IDEBreakpointBucket *userGlobalBucket;
@property (readonly) IDEBreakpointBucket *sharedWorkspaceBucket;
@property (readonly) NSArray *allBucketsWithBreakpoints;
@property (nonatomic) BOOL breakpointsActivated;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) BOOL valid;
@property (readonly) DVTStackBacktrace *invalidationBacktrace;
@property (retain) DVTStackBacktrace *creationBacktrace;

/* class methods */
+ (void)initialize;

/* instance methods */
- (id)initWithWorkspace:(id)workspace error:(id *)error;
- (void)_handleCurrentDebugSessionStateChanged:(id)changed;
- (void)_handleWorkspaceContainersChanges:(id)changes;
- (void)_handleWorkspaceContainerInserted:(id)inserted;
- (void)_handleWorkspaceContainerRemoved:(id)removed;
- (id)createBreakpointAtDocumentLocation:(id)location usingStringAtLine:(id)line;
- (id)createFileBreakpointAtDocumentLocation:(id)location;
- (id)createAddressBreakpoint:(id)breakpoint;
- (id)_createAddressBreakpointFrom:(id)from usingLineOfDisassembly:(id)disassembly;
- (void)addBreakpoint:(id)breakpoint;
- (void)addWatchpoint:(id)watchpoint;
- (void)_addBreakpoint:(id)breakpoint toBucket:(id)bucket;
- (BOOL)_managesBucket:(id)bucket;
- (void)removeBreakpoint:(id)breakpoint;
- (void)removeBreakpoints:(id)breakpoints;
- (void)removeWatchpoint:(id)watchpoint;
- (void)registerDoingWorkOnBreakpoint:(id)breakpoint block:(id /* block */)block;
- (id)fileBreakpointAtDocumentLocation:(id)location;
- (id)lineBreakpointAtDocumentLocation:(id)location;
- (id)columnBreakpointsAtDocumentLocation:(id)location;
- (BOOL)_isBreakpointAtLocation:(id)location location:(id)location columnOnly:(BOOL)only;
- (void)setBreakpointShared:(id)shared shared:(BOOL)shared;
- (BOOL)_anyFileReferenceForPath:(id)path matchesDataTypeIdentifier:(id)identifier;
- (BOOL)_canSetBreakpointAtURL:(id)url;
- (void)_removeListenerFromBucketsBreakpointList:(id)list;
- (void)_addListenerToBucketsBreakpointList:(id)list;
- (void)_handleBreakpointsForBucket:(id)bucket change:(id)change;
- (id)createSanitizerBreakpointIfNecessary:(unsigned long long)necessary categories:(id)categories ignoreExisting:(BOOL)existing;
- (void)addBreakpointObserver:(id)observer;
- (void)removeBreakpointObserver:(id)observer;
- (void)_notifyObserversOfActivationStateChange;
- (void)breakpointEnablementChanged:(id)changed;
- (void)breakpointResolutionChanged:(id)changed;
- (void)breakpointModificationChanged:(id)changed;
- (void)breakpointNameChanged:(id)changed;
- (void)breakpointTextFilterablePropertyChanged:(id)changed;
- (BOOL)breakpointShouldBeActivated:(id)activated;
- (void)breakpointLocationsAdded:(id)added removed:(id)removed;
- (void)primitiveInvalidate;
@end

#endif /* IDEBreakpointManager_h */
