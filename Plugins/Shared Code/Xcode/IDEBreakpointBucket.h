//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.442, BuildTime: 2023-12-27T19:00:48Z)
//
//    - LC_BUILD_VERSION:  Platform: macOS, MinOS: 13.0, SDK: 14.0, Tool: ld (1022.1)
//    - LC_SOURCE_VERSION: 22551.0.0.0.0
//
#ifndef IDEBreakpointBucket_h
#define IDEBreakpointBucket_h
#import <Foundation/Foundation.h>

#include "DVTInvalidation-Protocol.h"
#include "DVTXMLUnarchiving-Protocol.h"

@class DVTCustomDataSpecifier, DVTMutableOrderedDictionary, DVTStackBacktrace, NSArray, NSMutableArray, NSString, NSURL;
@protocol DVTCustomDataStoring;

@interface IDEBreakpointBucket : NSObject<DVTXMLUnarchiving, DVTInvalidation> {
  /* instance variables */
  NSString *_archivingContainerItemBaseStandardizedPathString;
  DVTMutableOrderedDictionary *_urlToFileBucketDict;
  BOOL _currentlyDecoding;
}

@property (copy, nonatomic) NSString *uuid;
@property (retain) IDEContainer<DVTCustomDataStoring> *archivingContainer;
@property (retain) NSArray *breakpoints;
@property (readonly) NSMutableArray *mutableBreakpoints;
@property (readonly) DVTCustomDataSpecifier *archivingDataSpecifier;
@property (copy) NSURL *fileURL;
@property (readonly) unsigned long long type;
@property (readonly) NSArray *bucketsAndBreakpoints;
@property (copy, nonatomic) NSString *displayName;
@property (readonly) BOOL shared;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) BOOL valid;
@property (readonly) DVTStackBacktrace *invalidationBacktrace;
@property (retain) DVTStackBacktrace *creationBacktrace;

/* class methods */
+ (void)initialize;
+ (id)bucketForUUID:(id)uuid;
+ (id)userGlobalBucket:(id *)bucket;
+ (id)keyPathsForValuesAffectingShared;
+ (id)keyPathsForValuesAffectingBucketsAndBreakpoints;
+ (id)keyPathsForValuesAffectingDisplayName;

/* instance methods */
- (id)init;
- (id)initWithType:(unsigned long long)type archivingContainer:(id)container error:(id *)error;
- (id)_archivingDataStore;
- (id)_archivingDataSpecifierWithName:(id)name;
- (BOOL)_shouldEncodeDecode;
- (void)_encodeToContainer;
- (BOOL)_decodeFromContainer:(id *)container;
- (BOOL)isShared;
- (id)_fileBreakpointBucketForBreakpoint:(id)breakpoint shouldCreate:(BOOL)create;
- (void)_addToFileBucketIfNecessary:(id)necessary;
- (void)addBreakpoint:(id)breakpoint;
- (id)removeBreakpoints:(id)breakpoints;
- (void)notifyPersistencyStateChanged;
- (void)_persistBreakpoints;
- (id)archivingContainerItemBaseStandardizedPathString;
- (id)_displayNameForWorkspace;
- (void)dvt_awakeFromXMLUnarchiver:(id)xmlunarchiver;
- (id)initFromXMLUnarchiver:(id)xmlunarchiver archiveVersion:(float)version;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)xmlarchiver version:(id)version;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)xmlarchiver version:(id)version;
- (id)_breakpointArchivingProxiesArray;
- (void)addBreakpoints:(id)breakpoints fromXMLUnarchiver:(id)xmlunarchiver;
- (void)primitiveInvalidate;
@end

#endif /* IDEBreakpointBucket_h */
