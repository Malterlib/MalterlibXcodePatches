//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.442, BuildTime: 2023-12-27T19:00:48Z)
//
//    - LC_BUILD_VERSION:  Platform: macOS, MinOS: 13.0, SDK: 14.0, Tool: ld (1022.1)
//    - LC_SOURCE_VERSION: 22540.0.0.0.0
//
#ifndef DVTDeviceType_h
#define DVTDeviceType_h
#import <Foundation/Foundation.h>

#include "DVTFilePath.h"

@class NSDictionary, NSOrderedSet, NSPredicate, NSSet, NSString;

@interface DVTDeviceType : NSObject {
  /* instance variables */
  DVTFilePath *_bundlePath;
  NSPredicate *_matchPredicate;
  NSPredicate *_filterPredicate;
}

@property (readonly) NSString *baseDeviceTypeIdentifier;
@property (readonly, copy) NSString *identifier;
@property (readonly, copy) NSString *name;
@property (readonly, copy) NSString *UTI;
@property (readonly, copy) NSOrderedSet *supportedArchitectures;
@property (readonly, copy) NSString *deviceSpecifierPrefix;
@property (readonly, copy) NSDictionary *deviceSpecifierOptionDefaults;
@property (readonly, copy) NSSet *knownDeviceSpecifierOptions;
@property (readonly, copy) NSSet *requiredDeviceSpecifierOptions;

/* class methods */
+ (void)initialize;
+ (id)deviceTypeWithIdentifier:(id)identifier;
+ (id)parentDeviceTypeForDeviceType:(id)type;
+ (void)_locked_registerDeviceType:(id)type;
+ (void)_locked_registerPendingDeviceTypeSpecification:(id)specification waitingForBaseDeviceTypeWithIdentifier:(id)identifier;
+ (void)_locked_fulfillPendingDeviceTypeSpecificationsWaitingForBaseDeviceTypeWithIdentifier:(id)identifier;
+ (void)registerDeviceTypeWithSpecification:(id)specification;
+ (id)conformingDeviceTypeForDevice:(id)device;
+ (BOOL)loadAllDeviceTypeBundlesReturningError:(id *)error;
+ (void)_loadDeviceTypeBundleAtPath:(id)path;
+ (id)_propertyDictionaryForDeviceTypeAtPath:(id)path;

/* instance methods */
- (id)initWithIdentifier:(id)identifier baseDeviceType:(id)type;
- (id)initWithIdentifier:(id)identifier baseDeviceType:(id)type specification:(id)specification;
- (id)initWithExtension:(id)extension;
- (void)_initMatchPredicateWithPredicateString:(id)string fallbackPredicate:(id)predicate;
- (void)_initFilterPredicateWithPredicateString:(id)string fallbackPredicate:(id)predicate;
- (void)_commonInit;
- (id)description;
- (id)_baseDeviceType;
- (BOOL)_isMatchedDevice:(id)device;
- (BOOL)_isFilteredDevice:(id)device;
@end

#endif /* DVTDeviceType_h */
