//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.442, BuildTime: 2023-12-27T19:00:48Z)
//
//    - LC_BUILD_VERSION:  Platform: macOS, MinOS: 13.0, SDK: 14.0, Tool: ld (1022.1)
//    - LC_SOURCE_VERSION: 22551.0.0.0.0
//
#ifndef IDEFindEditorTokenHandler_h
#define IDEFindEditorTokenHandler_h
#import <Foundation/Foundation.h>

#include "DVTInvalidation_NSObject.h"
#include "DVTFilteredDataSource-Protocol.h"
#include "DVTFilteredDataViewingContext-Protocol.h"
#include "IDEBatchFindTokenFieldController.h"
#include "IDEBatchFindTokenFieldControllerDelegate-Protocol.h"

@class NSString, OS_dispatch_queue;

@interface IDEFindEditorTokenHandler : DVTInvalidation_NSObject<DVTFilteredDataViewingContext, DVTFilteredDataSource, IDEBatchFindTokenFieldControllerDelegate> { // (Swift)
  /* instance variables */
   void *tokenField;
   void *queryParametersController;
   void *namedScopes;
   void *groupChooserPresentingFilterExpression;
   void *editedGroupScope;
   void *isUpdatingFieldFromSpec;
   void *matchCaseImage;
}

@property (nonatomic, readonly) NSString *filterFieldToolTip;
@property (nonatomic, readonly) NSString *filterFieldAccessibilityDescription;
@property (nonatomic, readonly) OS_dispatch_queue *filteringQueue;
@property (nonatomic, readonly) long long filterProgress;
@property (nonatomic, retain) IDEBatchFindTokenFieldController *tokenFieldController;

/* instance methods */
- (void)filteringEnded;
- (void)showMatches:(id)matches added:(id)added removed:(id)removed;
- (void)filterWithFilterSession:(id)session;
- (void)filterSessionDidEnd:(id)end;
- (id)titleForFilterIdentifier:(id)identifier;
- (id)completionsMenuSectionTitleForFilterExpression:(id)expression;
- (id)filterExpressionForText:(id)text isComplete:(BOOL)complete currentFilterExpression:(id)expression;
- (id)validFilterExpressionsForExpressions:(id)expressions currentFilterExpression:(id)expression;
- (id)fieldDisplayStringForFilterExpression:(id)expression;
- (id)menuDisplayStringForFilterExpression:(id)expression;
- (id)tokenMenuDisplayStringForFilterExpression:(id)expression;
- (id)editingStringForFilterExpression:(id)expression;
- (id)relatedFilterExpressionsIncludingExpression:(id)expression;
- (id)relatedFilterExpressionsAffectingTypeIncludingExpression:(id)expression;
- (id)filterExpressionCompletionsForText:(id)text currentFilterExpression:(id)expression;
- (id)prefixFieldDisplayStringForFilterExpression:(id)expression;
- (id)suffixFieldDisplayStringForFilterExpression:(id)expression;
- (id)buttonsForCustomFilterExpressions;
- (BOOL)filterExpressionFieldControllerHandleCancelOperation:(id)operation;
- (BOOL)filterExpressionFieldController:(id)controller presentMenu:(id)menu forFilterExpression:(id)expression inControlView:(id)view fromRect:(struct CGRect)rect;
- (id)filterExpressionFieldController:(id)controller menuForFilterExpression:(id)expression;
- (id)filterExpressionFieldController:(id)controller completionsTokensForSelectedCompletionToken:(id)token currentFieldTokens:(id)tokens;
- (id)initWithTokenField:(id)field queryParametersController:(id)controller;
- (void)primitiveInvalidate;
- (void)updateTokensWithQuerySpecification:(id)specification;
- (id)init;
@end

#endif /* IDEFindEditorTokenHandler_h */
