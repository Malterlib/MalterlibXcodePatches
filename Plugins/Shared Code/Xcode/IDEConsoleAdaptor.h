//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.442, BuildTime: 2023-12-27T19:00:48Z)
//
//    - LC_BUILD_VERSION:  Platform: macOS, MinOS: 13.0, SDK: 14.0, Tool: ld (1022.1)
//    - LC_SOURCE_VERSION: 22551.0.0.0.0
//
#ifndef IDEConsoleAdaptor_h
#define IDEConsoleAdaptor_h
#import <Foundation/Foundation.h>

#include "DVTOSLogTapDelegate-Protocol.h"
#include "IDELaunchParametersSnapshot.h"
#include "XCTHConsoleAdaptor-Protocol.h"

struct IDEConsoleLogPacket { BOOL hasPrefix; long long logHookFlags; long long logRedirectFlags; char typeFlag; long long sequenceNumber; NSString *jsonString; BOOL hasReceivedFullPreamble; NSDictionary *jsonDictionary; long long remainingLines; NSString *message; };

@class DVTNotificationToken, NSFileHandle, NSMutableData, NSMutableDictionary, NSMutableString, NSPointerArray, NSString, NSTimer;
@protocol IDEConsoleAdaptorDelegateProtocol, OS_dispatch_queue, XCTHConsoleAdaptorDelegate;

@interface IDEConsoleAdaptor : NSObject<XCTHConsoleAdaptor, DVTOSLogTapDelegate> {
  /* instance variables */
  int _readMode;
  NSObject<OS_dispatch_queue> *_writeSerialQueue;
  NSTimer *_endOfStandardOutputReadTimer;
  NSTimer *_endOfStandardErrorReadTimer;
  NSFileHandle *_standardInput;
  NSFileHandle *_standardOutput;
  NSFileHandle *_standardError;
  NSMutableData *_currentOutputOverflow;
  NSMutableString *_currentOutputLineOverflow;
  NSMutableData *_currentErrorOverflow;
  NSMutableString *_currentErrorLineOverflow;
  NSTimer *_targetOutputOverflowTimer;
  NSTimer *_targetOutputNewlineTimer;
  BOOL _delegateRespondsToParseConsoleOutputFromOriginalOutput;
  BOOL _delegateRespondsToParseConsoleInputFromOriginalInput;
  unsigned long long _currNumStoredChars;
  DVTNotificationToken *_readOutputToken;
  DVTNotificationToken *_readErrorToken;
  NSPointerArray *_observers;
  NSString *_osLogToken;
  NSString *_libLogRedirectPrefixStringWithLF;
  NSString *_libLogRedirectPrefixStringWithCRLF;
  NSTimer *_libLogRedirectTimeoutTimer;
  NSTimer *_libLogRedirectPrefixMatchTimeoutTimer;
  NSFileHandle *_libLogRedirectFileHandle;
  struct IDEConsoleLogPacket _lastLogPacket;
  struct IDEConsoleLogPacket _currentLogPacket;
  NSMutableDictionary *_logPacketSequenceNumbers;
  NSMutableString *_currentPartialLogLineBuffer;
}

@property (retain) NSObject<XCTHConsoleAdaptorDelegate> *delegate;
@property (readonly) unsigned long long type;
@property (readonly) BOOL finishedReceivingData;
@property (readonly) struct __CFDictionary * completeContent;
@property (readonly) struct __CFArray * completeContentSequences;
@property (readonly) struct __CFArray * standardInputSequences;
@property (readonly) struct __CFArray * standardOutputSequences;
@property (readonly) struct __CFArray * standardErrorSequences;
@property (readonly) struct __CFArray * osLogSequences;
@property (readonly) IDELaunchParametersSnapshot *launchParameters;
@property (readonly) NSString *deviceSupportPath;
@property BOOL ignoreFutureOutput;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (void)initialize;
+ (unsigned long long)_nextContentSequence;
+ (id)_itemsForAdaptors:(id)adaptors sequencesSelector:(SEL)selector;
+ (id)allConsoleItemsForAdaptors:(id)adaptors;
+ (id)standardInputItemsForAdaptors:(id)adaptors;
+ (id)standardOutputItemsForAdaptors:(id)adaptors;
+ (id)standardErrorItemsForAdaptors:(id)adaptors;
+ (id)osLogItemsForAdaptors:(id)adaptors;
+ (BOOL)supportsDTServiceHubLoggingForLaunchStyle:(int)style launchAutomaticallySubstyle:(unsigned long long)substyle useProxy:(BOOL)proxy schemeCommand:(id)command andRunDestination:(id)destination;
+ (BOOL)supportsLibLogRedirectLoggingForLaunchStyle:(int)style launchAutomaticallySubstyle:(unsigned long long)substyle useProxy:(BOOL)proxy schemeCommand:(id)command andRunDestination:(id)destination;
+ (int)loggingMethodForEnvironment:(id)environment useProxy:(BOOL)proxy schemeCommand:(id)command launchStyle:(int)style launchAutomaticallySubstyle:(unsigned long long)substyle andRunDestination:(id)destination;
+ (int)stdIOMethodForEnvironment:(id)environment useProxy:(BOOL)proxy schemeCommand:(id)command launchStyle:(int)style launchAutomaticallySubstyle:(unsigned long long)substyle andRunDestination:(id)destination;
+ (id)descriptionForLoggingMethod:(int)method andStdIOMethod:(int)iomethod;

/* instance methods */
- (id)initForLaunchSession:(id)session withType:(unsigned long long)type standardInput:(id)input standardOutput:(id)output standardError:(id)error;
- (id)initWithType:(unsigned long long)type standardInput:(id)input standardOutput:(id)output standardError:(id)error;
- (void)dealloc;
- (BOOL)_removeSequence:(unsigned long long)sequence fromSupportingSequences:(struct __CFArray *)sequences;
- (void)_addToCompleteContent:(id)content andSupportingSequences:(struct __CFArray *)sequences;
- (void)_makeExpired;
- (void)makeExpired;
- (void)inputFromConsole:(id)console withDisplayCommand:(id)command;
- (void)inputFromConsole:(id)console echo:(BOOL)echo;
- (void)inputForStandardInput:(id)input echo:(BOOL)echo;
- (void)inputForStandardInput:(id)input;
- (void)addObserver:(id)observer;
- (void)removeObserver:(id)observer;
- (void)_notifyObserversOfConsoleItems:(id)items;
- (void)addOutputItem:(id)item toSequence:(struct __CFArray *)sequence;
- (void)outputForStandardOutput:(id)output;
- (void)promptForStandardOutput:(id)output;
- (void)userRequestedOutputForStandardOutput:(id)output;
- (void)outputForStandardError:(id)error;
- (void)_setStandardInput:(id)input;
- (id)_delegateProcessedOutput:(id)output;
- (void)_timerFiredForTargetOutputWaitingForNewline:(id)newline;
- (void)_outputForStandardOutputThroughDelegate:(id)delegate;
- (void)_outputForStandardOutputThroughLogging:(id)logging;
- (void)_outputForStandardErrorThroughDelegate:(id)delegate;
- (void)_outputForStandardErrorThroughLogging:(id)logging;
- (void)_timerFiredForTargetOutputOverflow:(id)overflow;
- (id)_getDataFromNotification:(id)notification overflowBuffer:(id *)buffer stringBuffer:(id *)buffer;
- (id)_getDataFromFileHandle:(id)handle overflowBuffer:(id *)buffer stringBuffer:(id *)buffer;
- (id)_getData:(id)data fileHandle:(id)handle overflowBuffer:(id *)buffer stringBuffer:(id *)buffer;
- (void)_fileHandleCompletedRead:(id)read;
- (void)_timerFiredToCheckEndOfRead:(id)read;
- (void)_getOutputFromNotification:(id)notification;
- (void)_getOutputFromFileHandle:(id)handle;
- (void)_getOutput:(id)output;
- (void)_getErrorFromNotification:(id)notification;
- (void)_getErrorFromFileHandle:(id)handle;
- (void)_getError:(id)error;
- (void)_addObserverToReadCompletion:(id)completion selector:(SEL)selector;
- (void)_setStandardOutput:(id)output;
- (void)_setStandardError:(id)error;
- (id)_itemsForSequences:(struct __CFArray *)sequences;
- (id)allConsoleItems;
- (id)standardInputItems;
- (id)standardOutputItems;
- (id)standardErrorItems;
- (id)osLogItems;
- (void)sendStructuredLoggingIndicator;
- (void)sendErrorMessageToConsole:(id)console;
- (id)_loggingProcessedOutput:(id)output;
- (BOOL)checkAndHandleRemainingLinesForLogMessageWithScanner:(id)scanner;
- (BOOL)checkAndHandleLogPreambleWithScanner:(id)scanner;
- (BOOL)checkLogPrefixWithScanner:(id)scanner;
- (BOOL)checkLogFlagsWithScanner:(id)scanner;
- (BOOL)validateFlagsForCurrentPacket;
- (BOOL)validatePacketTypeFlag:(char)flag;
- (long long)nextSequenceNumberForTypeFlag:(char)flag;
- (BOOL)checkMetadataWithScanner:(id)scanner;
- (BOOL)parseMetadataForCurrentLogPacket;
- (BOOL)checkAndHandleStandardErrorWithScanner:(id)scanner;
- (double)flushDelayForPartialLogLineBuffer;
- (void)flushCurrentPartialLogLineBuffer;
- (void)handleCompletedPacket;
- (void)handleInitializationPacket;
- (void)handleErrorPacket;
- (void)handleLogPacket;
- (struct IDEConsoleLogPacket)_makeInitialLogPacket;
- (id)fileHandleForLibLogRedirect;
- (void)initializeLogParsingVars;
- (void)sendLibLogRedirectInitializationErrorMessage;
- (void)setupLoggingStreamForPid:(int)pid withDevice:(id)device schemeCommand:(id)command launchParameters:(id)parameters withCompletionBlock:(id /* block */)block;
- (void)handleDVTOSLogMessages:(id)messages;
- (BOOL)_shouldDisplayConsoleItem:(id)item;
- (void)handleDVTOSLogStatus:(id)status;
- (void)handleDTTapDisconnect;
- (BOOL)shouldIncludeDVTOSLogMessage:(id)message;
@end

#endif /* IDEConsoleAdaptor_h */
