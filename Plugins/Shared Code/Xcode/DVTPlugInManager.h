//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.442, BuildTime: 2023-12-27T19:00:48Z)
//
//    - LC_BUILD_VERSION:  Platform: macOS, MinOS: 13.0, SDK: 14.0, Tool: ld (1022.1)
//    - LC_SOURCE_VERSION: 22540.0.0.0.0
//
#ifndef DVTPlugInManager_h
#define DVTPlugInManager_h
#import <Foundation/Foundation.h>

#include "DVTDispatchLock.h"
#include "DVTPlugInLocator.h"

@class NSArray, NSDictionary, NSFileManager, NSMutableArray, NSMutableDictionary, NSMutableSet, NSSet, NSString, NSUUID;

@interface DVTPlugInManager : NSObject {
  /* instance variables */
  DVTDispatchLock *_plugInManagerLock;
  NSFileManager *_fileManager;
  NSString *_hostAppName;
  NSString *_hostAppContainingPath;
  NSString *_plugInCachePath;
  NSDictionary *_plugInCache;
  NSMutableDictionary *_plugInsByIdentifier;
  NSMutableDictionary *_extensionPointsByIdentifier;
  NSMutableDictionary *_extensionsByIdentifier;
  NSMutableDictionary *_invalidExtensionsByIdentifier;
  NSMutableSet *_warnedExtensionPointFailures;
  NSMutableSet *_nonApplePlugInSanitizedStatuses;
  NSMutableDictionary *_nonApplePlugInDescriptorActivateCallbacks;
  NSMutableArray *_duplicateRecords;
  struct { uint64_t _reserved :62 ; uint64_t _isSecondaryScan :1 ; uint64_t _hasScannedForPlugIns :1 ; } _flags;
}

@property (readonly) BOOL usePlugInCache;
@property () BOOL hasScannedForPlugIns;
@property (retain) DVTPlugInLocator *plugInLocator;
@property (readonly, copy) NSArray *extraSearchPaths;
@property (readonly) NSSet *sanitizedNonApplePlugInStatuses;
@property (readonly, copy) NSArray *nonApplePlugInDescriptors;
@property (copy) id /* block */ shouldAllowNonApplePlugInsCallback;
@property (copy, ) NSArray *searchPaths;
@property (readonly, ) NSMutableArray *mutableSearchPaths;
@property (readonly, copy) NSArray *defaultSearchPaths;
@property (copy, ) NSSet *pathExtensions;
@property (readonly, ) NSMutableSet *mutablePathExtensions;
@property (copy, ) NSSet *exposedCapabilities;
@property (readonly, ) NSMutableSet *mutableExposedCapabilities;
@property (copy, ) NSSet *defaultPlugInCapabilities;
@property (readonly, ) NSMutableSet *mutableDefaultPlugInCapabilities;
@property (copy, ) NSSet *requiredPlugInIdentifiers;
@property (readonly, ) NSMutableSet *mutableRequiredPlugInIdentifiers;
@property BOOL shouldClearPlugInCaches;
@property (readonly, copy) NSUUID *plugInHostUUID;
@property (copy, nonatomic) NSString *loadFailureHint;

/* class methods */
+ (void)initialize;
+ (id)defaultPlugInManager;
+ (void)_setDefaultPlugInManager:(id)manager;
+ (BOOL)ib_enumerateExtensionDataForPluginAtPath:(id)path error:(id *)error withBlock:(id /* block */)block;
+ (BOOL)enumerateExtensionDataForPluginAtPath:(id)path error:(id *)error withBlock:(id /* block */)block;

/* instance methods */
- (id)_hostAppContainingPath;
- (id)_hostAppName;
- (id)init;
- (BOOL)scanForPlugIns:(id *)ins;
- (id)plugInWithIdentifier:(id)identifier;
- (id)_extensionPointWithIdentifier:(id)identifier forExtension:(id)extension orExtensionPoint:(id)point inPlugIn:(id)in;
- (id)extensionPointWithIdentifier:(id)identifier;
- (id)extensionWithIdentifier:(id)identifier;
- (id)_extensionsForExtensionPoint:(id)point passingTest:(id /* block */)test;
- (id)_defaultApplicationSupportSubdirectory;
- (id)_defaultPathExtensions;
- (BOOL)_isInitialScan;
- (id)_scanRecordForBundle:(id)bundle atPath:(id)path;
- (id)_allFrameworks;
- (id)_plugInScanRecordsForInitialScan:(BOOL)scan linkedFrameworksScanRecords:(id *)records;
- (id)_additionalRequiredSuperiorPlugInScanRecords:(id)records;
- (void)_initializeBundlesForScanRecords:(id)records;
- (BOOL)_scanForPlugIns:(id *)ins;
- (id)_extractErrorFromPlugInLoadingException:(id)exception;
- (id)_nonApplePlugInListDefault;
- (id)nonApplePlugInDescriptorsPreviouslyAllowed;
- (id)nonApplePlugInDescriptorsNotPreviouslyAllowedOrSkipped;
- (void)_recordNonApplePlugInDescriptor:(id)descriptor;
- (void)_registerDescriptorType:(id)type activationCallback:(id /* block */)callback;
- (void)_saveNonApplePlugInListBasedOnAllowedDescriptors:(id)descriptors;
- (BOOL)_allowNonApplePlugInsFromDescriptors:(id)descriptors error:(id *)error;
- (void)_checkNonApplePlugIns;
- (BOOL)initializePlugIns:(id *)ins;
- (id)_scanForPlugInsInDirectories:(id)directories skippingDuplicatesOfPlugIns:(id)ins;
- (void)_applyActivationRulesToScanRecords:(id)records;
- (void)_instantiatePlugInsForScanRecords:(id)records;
- (void)_createPlugInObjectsFromScanRecords:(id)records;
- (void)_addSanitizedNonApplePlugInStatusForBundle:(id)bundle reason:(id)reason;
- (void)_recordSanitizedPluginStatus:(id)status errorMessage:(id)message;
- (id)_plugInIDsToIgnore;
- (id)_oldPluginNamesToSupersedingPluginNames;
- (void)_pruneUnusablePlugInsAndScanRecords:(id)records linkedFrameworkPaths:(id)paths;
- (void)_registerPlugInsFromScanRecords:(id)records;
- (BOOL)shouldPerformConsistencyCheck;
- (BOOL)_checkPresenceOfRequiredPlugIns:(id)ins error:(id *)error;
- (void)_freezePlugInObjectGraph;
- (void)_preLoadPlugIns;
- (id)_modificationDateOfFileAtPath:(id)path;
- (BOOL)_cacheCoversPlugInsWithScanRecords:(id)records;
- (BOOL)_loadPlugInCache:(id *)cache;
- (BOOL)_removePlugInCacheAndReturnError:(id *)error;
- (BOOL)_savePlugInCacheWithScanRecords:(id)records error:(id *)error;
- (void)_createPlugInObjectsFromCache;
- (id)_toolsVersionName;
- (id)_applicationCachesPath;
- (id)_plugInCachePath;
- (id)_invalidExtensionWithIdentifier:(id)identifier;
- (id)_duplicateRecords;
@end

#endif /* DVTPlugInManager_h */
