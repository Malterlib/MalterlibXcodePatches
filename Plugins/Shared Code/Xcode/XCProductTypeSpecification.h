//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.442, BuildTime: 2023-12-27T19:00:48Z)
//
//    - LC_BUILD_VERSION:  Platform: macOS, MinOS: 13.0, SDK: 14.0, Tool: ld (1022.1)
//    - LC_SOURCE_VERSION: 22526.0.0.0.0
//
#ifndef XCProductTypeSpecification_h
#define XCProductTypeSpecification_h
#import <Foundation/Foundation.h>

#include "XCSpecification.h"

@class DVTMacroDefinitionTable, NSArray, NSDictionary, NSSet;

@interface XCProductTypeSpecification : XCSpecification {
  /* instance variables */
  DVTMacroDefinitionTable *_defaultMacros;
  DVTMacroDefinitionTable *_flattenedDefaultMacros;
  DVTMacroDefinitionTable *_overridingMacros;
  DVTMacroDefinitionTable *_flattenedOverridingMacros;
  NSSet *_allowedBuildPhaseClasses;
  NSSet *_allowedBuildPhaseIdentifiers;
  NSDictionary *_allowedFileTypesByBuildPhaseIdentifier;
  NSArray *_packageTypes;
  NSDictionary *_defaultEntitlements;
}

@property (readonly) BOOL wantsSimpleTargetEditing;
@property (readonly) BOOL wantsInfoEditorHidden;
@property (readonly) BOOL areCapabilitiesSupported;
@property (readonly) BOOL validateEmbeddedBinaries;
@property (readonly) BOOL canDisableBitcodeDespitePlatform;
@property (readonly) BOOL wantsBundleIdentifierEditing;
@property (readonly) BOOL wantsSigningEditing;
@property (readonly) BOOL isUnitTest;
@property (readonly) BOOL isUITest;
@property (readonly) BOOL isMultiDeviceUITest;
@property (readonly) BOOL isExternalTest;
@property (readonly) BOOL supportsHostingTests;
@property (readonly) BOOL supportsBeingUITestTarget;
@property (readonly) BOOL supportsDefinesModule;

/* class methods */
+ (Class)specificationTypeBaseClass;
+ (id)specificationType;
+ (id)localizedSpecificationTypeName;
+ (id)specificationTypePathExtensions;
+ (id)specificationRegistryName;

/* instance methods */
- (id)initWithPropertyListDictionary:(id)dictionary inDomain:(id)domain;
- (id)defaultTargetName;
- (id)defaultMacros;
- (id)overridingMacros;
- (id)allowedBuildPhaseClasses;
- (BOOL)allowsBuildPhaseWithIdentifier:(id)identifier;
- (id)allowedFileTypesForBuildPhaseIdentifier:(id)identifier;
- (id)packageTypes;
- (id)defaultPackageType;
- (BOOL)hasInfoPlist;
- (id)infoPlistAdditions;
- (BOOL)canEmbedCompilerSanitizerLibraries;
- (id)runpathSearchPathForEmbeddedFrameworks;
- (BOOL)isEmbeddable;
- (id)buildPhaseInjectionsWhenEmbedding;
- (id)requiredBuiltProductsDir;
- (id)additionalEntitlementsForMacroExpansionScope:(id)scope;
- (id)additonalFileRefsForBuildPhase:(id)phase macroExpansionScope:(id)scope;
- (void)computeDependenciesWithMacroExpansionScope:(id)scope;
- (id)initializeTemporaryBuildSettingsWithMacroExpansionScope:(id)scope;
- (id)computeCustomContextForMacroExpansionScope:(id)scope;
- (void)initializeBuildSettingsWithMacroExpansionScope:(id)scope;
- (void)computeProductDependenciesWithMacroExpansionScope:(id)scope;
- (id)scopeByAlteringPathsWhereNecessaryWithMacroExpansionScope:(id)scope;
- (void)defineAuxiliaryFilesWithMacroExpansionScope:(id)scope;
- (id)moduleMapPathWithMacroExpansionScope:(id)scope isFrameworkModule:(BOOL *)module;
- (id)privateModuleMapPathWithMacroExpansionScope:(id)scope;
- (id)moduleMapContentsWithMacroExpansionScope:(id)scope isFrameworkModule:(BOOL)module;
- (void)_defineModuleFilesWithMacroExpansionScope:(id)scope;
- (void)_computeModuleMapProductDependenciesWithMacroExpansionScope:(id)scope;
- (void)definePlatformSpecificAuxiliaryFilesWithMacroExpansionScope:(id)scope;
- (void)performCodeSigningOfProductWithMacroExpansionScope:(id)scope;
- (void)beginPostProcessingProductWithMacroExpansionScope:(id)scope;
- (void)finishPostProcessingProductWithMacroExpansionScope:(id)scope;
- (id)runWorkQueuePhase:(unsigned long long)phase withMacroExpansionScope:(id)scope;
- (void)runWorkQueuePhase:(unsigned long long)phase perVariantWithMacroExpansionScope:(id)scope;
- (void)processInfoPlistNode:(id)node toOutputNode:(id)node pkgInfoNode:(id)node withMacroExpansionScope:(id)scope;
- (void)processInfoPlistFileWithMacroExpansionScope:(id)scope;
- (void)generateAssetPackManifestWithMacroExpansionScope:(id)scope;
- (void)processAddressSanitizerSupportWithMacroExpansionScope:(id)scope;
- (void)processThreadSanitizerSupportWithMacroExpansionScope:(id)scope;
- (void)processUBSanitizerSupportWithMacroExpansionScope:(id)scope;
- (void)_embedCompilerSanitizerLibraryFileNamed:(id)named sanitizerTypeName:(id)name withMacroExpansionScope:(id)scope;
- (void)copyAsideProductWithMacroExpansionScope:(id)scope;
- (void)editSymbolsOfLinkedProductWithMacroExpansionScope:(id)scope;
- (BOOL)shouldStripSymbolsOfLinkedProductWithMacroExpansionScope:(id)scope;
- (id)stripSymbolsOfLinkedProductWithMacroExpansionScope:(id)scope;
- (BOOL)_shouldGenerateInstallAPIForLinkedProductWithMacroExpansionScope:(id)scope;
- (BOOL)_shouldGenerateStubAPIForLinkedProductWithMacroExpansionScope:(id)scope;
- (void)generateInstallAPIForLinkedProductWithMacroExpansionScope:(id)scope;
- (void)generateStubAPIForLinkedProductWithMacroExpansionScope:(id)scope;
- (void)setAlternatePermissionsOnProductWithMacroExpansionScope:(id)scope;
- (void)_computeDependenciesForOwner:(id)owner group:(id)group mode:(id)mode onFile:(id)file withMacroExpansionScope:(id)scope;
- (void)changePermissionsOnProductWithMacroExpansionScope:(id)scope;
- (id)computeProductTouchActionWithMacroExpansionScope:(id)scope;
- (void)compileAuxiliaryFilesForVariant:(id)variant architecture:(id)architecture withMacroExpansionScope:(id)scope;
- (void)registerProductWithLaunchServicesWithMacroExpansionScope:(id)scope;
- (void)registerCoreProductStructureCreatorsWithMacroExpansionScope:(id)scope;
- (id)linkerSpecificationForObjectFilesWithMacroExpansionScope:(id)scope;
- (void)addBaseLinkerFlagsWithMacroExpansionScope:(id)scope;
- (void)addInstallNameLinkerFlagsWithMacroExpansionScope:(id)scope;
- (id)macroExpansionScopeByAddingMacroDefinitionTablesToScope:(id)scope;
- (id)createUniversalBinaryFromThinBinaries:(id)binaries withMacroExpansionScope:(id)scope;
- (BOOL)shouldEmbedSwiftStandardLibraries;
- (id)wrapperSubpathForSwiftmodule;
- (void)registerSwiftmoduleProductStructureCreatorsWithMacroExpansionScope:(id)scope;
- (void)addProductTypeSpecificArgumentsForCommand:(id)command withMacroExpansionScope:(id)scope;
@end

#endif /* XCProductTypeSpecification_h */
