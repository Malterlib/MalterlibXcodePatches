//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.442, BuildTime: 2023-12-27T19:00:48Z)
//
//    - LC_BUILD_VERSION:  Platform: macOS, MinOS: 13.0, SDK: 14.0, Tool: ld (1022.1)
//    - LC_SOURCE_VERSION: 22551.0.0.0.0
//
#ifndef IDELaunchTestSchemeAction_h
#define IDELaunchTestSchemeAction_h
#import <Foundation/Foundation.h>

#include "IDESchemeAction.h"
#include "IDECodeCoverageMutating-Protocol.h"
#include "IDESchemeBuildableReference.h"

@class DVTNotificationToken, NSArray, NSDictionary, NSMutableArray, NSString;
@protocol IDEPrimitiveSchemeCommand;

@interface IDELaunchTestSchemeAction : IDESchemeAction<IDECodeCoverageMutating> {
  /* instance variables */
  DVTNotificationToken *_buildablesToken;
  IDESchemeBuildableReference *_loadingBuildableReferenceToUseForMacroExpansion;
  IDESchemeBuildableReference *_buildableReferenceToUseForMacroExpansion;
}

@property (copy) NSString *debugAsWhichUser;
@property (retain) NSMutableArray *mutableCodeCoverageTargets;
@property (readonly, nonatomic) IDESchemeCommand<IDEPrimitiveSchemeCommand> *schemeCommand;
@property (copy) NSString *selectedDebuggerIdentifier;
@property (copy) NSString *selectedLauncherIdentifier;
@property BOOL askForAppToLaunch;
@property (nonatomic) unsigned int debugProcessAsUID;
@property (copy, nonatomic) NSString *customLLDBInitFile;
@property (readonly) NSString *resolvedCustomLLDBInitFile;
@property (copy, ) NSArray *commandLineArgumentEntries;
@property (readonly, ) NSMutableArray *mutableCommandLineArgumentEntries;
@property (copy, ) NSArray *environmentVariableEntries;
@property (readonly, ) NSMutableArray *mutableEnvironmentVariableEntries;
@property (readonly) NSDictionary *additionalOptionEntriesDict;
@property (nonatomic) BOOL shouldUseLaunchSchemeArgsEnv;
@property (readonly) unsigned long long sanitizerOptions;
@property BOOL enableAddressSanitizer;
@property BOOL enableASanStackUseAfterReturn;
@property BOOL enableThreadSanitizer;
@property BOOL enableUBSanitizer;
@property BOOL enableMainThreadChecker;
@property BOOL enablePerformanceAntipatternChecker;
@property (copy, nonatomic) NSString *language;
@property (copy, nonatomic) NSString *region;
@property long long systemAttachmentLifetime;
@property long long userAttachmentLifetime;
@property long long preferredScreenCaptureFormat;
@property (readonly) NSArray *availableMallocStackLoggingTypes;
@property (copy) NSString *selectedMallocStackLoggingType;
@property BOOL mallocStackLoggingSelected;
@property (copy) NSString *selectedMallocStackLoggingTypeTooltip;
@property (nonatomic) BOOL codeCoverageEnabled;
@property (nonatomic) BOOL onlyGenerateCoverageForSpecifiedTargets;
@property (readonly, nonatomic) NSArray *codeCoverageTargets;

/* class methods */
+ (void)initialize;
+ (id)keyPathsForValuesAffectingSubtitle;
+ (id)keyPathsForValuesAffectingDebugProcessAsUID;
+ (id)createAdditionalDiagnosticsDict;
+ (void)_modifyEnvironmentForSQLLite:(id)sqllite;
+ (id)expandEnvironmentVariableEntries:(id)entries withBuildParameters:(id)parameters andScheme:(id)scheme usingBlock:(id /* block */)block;

/* instance methods */
- (void)addAdditionalRuntimeEnvironmentVariables:(id)variables buildParameters:(id)parameters;
- (void)dvt_commonInitIsFromUnarchiver:(BOOL)unarchiver;
- (id)init;
- (id)initFromXMLUnarchiver:(id)xmlunarchiver archiveVersion:(float)version;
- (void)setRunContext:(id)context;
- (void)updateBuildableForChangeInRunnable;
- (id)_verifyReference:(id)reference inBuildableReferences:(id)references;
- (void)_initializeBuildableReferenceToUseForMacroExpansion;
- (void)_updateBuildableToUseForMacroExpansion;
- (id)subtitle;
- (id)buildableReferenceToUseForMacroExpansion;
- (void)setBuildableReferenceToUseForMacroExpansion:(id)expansion;
- (id)expandMacrosInString:(id)string forBuildParameters:(id)parameters;
- (id)additionalOptions;
- (id)additionalOptionArchivingEntries;
- (void)modifyEnvironmentForMallocStackLogging:(id)logging;
- (id)environmentVariablesForBuildParameters:(id)parameters;
- (id)environmentVariablesForBuildParameters:(id)parameters environmentVariableEntries:(id)entries;
- (BOOL)_detectSwiftnessForTheRunnableWithSelector:(SEL)selector expectedValue:(BOOL)value;
- (BOOL)UBSanitizerAllowedForRunnable;
- (BOOL)containSwiftForTheRunnable;
- (BOOL)performanceAntipatternCheckerAllowedForRunnable;
- (void)_setSelectedMallocStackLoggingType:(id)type;
- (void)_updateSelectedMallocStackTooltip:(id)tooltip;
- (void)dvt_awakeFromXMLUnarchiver:(id)xmlunarchiver;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)xmlarchiver version:(id)version;
- (void)setShouldUseLaunchSchemeArgsEnvFromUTF8String:(char *)string fromXMLUnarchiver:(id)xmlunarchiver;
- (void)addCommandLineArguments:(id)arguments fromXMLUnarchiver:(id)xmlunarchiver;
- (void)addEnvironmentVariables:(id)variables fromXMLUnarchiver:(id)xmlunarchiver;
- (void)addAdditionalOptions:(id)options fromXMLUnarchiver:(id)xmlunarchiver;
- (void)addCodeCoverageTargets:(id)targets fromXMLUnarchiver:(id)xmlunarchiver;
- (void)setEnableAddressSanitizerFromUTF8String:(char *)string fromXMLUnarchiver:(id)xmlunarchiver;
- (void)setEnableASanStackUseAfterReturnFromUTF8String:(char *)string fromXMLUnarchiver:(id)xmlunarchiver;
- (void)setEnableThreadSanitizerFromUTF8String:(char *)string fromXMLUnarchiver:(id)xmlunarchiver;
- (void)setEnableUBSanitizerFromUTF8String:(char *)string fromXMLUnarchiver:(id)xmlunarchiver;
- (void)setDisableMainThreadCheckerFromUTF8String:(char *)string fromXMLUnarchiver:(id)xmlunarchiver;
- (void)setDisablePerformanceAntipatternCheckerFromUTF8String:(char *)string fromXMLUnarchiver:(id)xmlunarchiver;
- (void)setLanguageFromUTF8String:(char *)string fromXMLUnarchiver:(id)xmlunarchiver;
- (void)setRegionFromUTF8String:(char *)string fromXMLUnarchiver:(id)xmlunarchiver;
- (void)setSystemAttachmentLifetimeFromUTF8String:(char *)string fromXMLUnarchiver:(id)xmlunarchiver;
- (void)setUserAttachmentLifetimeFromUTF8String:(char *)string fromXMLUnarchiver:(id)xmlunarchiver;
- (void)setPreferredScreenCaptureFormatFromUTF8String:(char *)string fromXMLUnarchiver:(id)xmlunarchiver;
- (void)setCodeCoverageEnabledFromUTF8String:(char *)string fromXMLUnarchiver:(id)xmlunarchiver;
- (void)setOnlyGenerateCoverageForSpecifiedTargetsFromUTF8String:(char *)string fromXMLUnarchiver:(id)xmlunarchiver;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)xmlarchiver version:(id)version;
- (void)addMacroExpansion:(id)expansion fromXMLUnarchiver:(id)xmlunarchiver;
- (void)addCodeCoverageTarget:(id)target;
- (void)removeCodeCoverageTarget:(id)target;
- (void)primitiveInvalidate;
- (BOOL)isCodeCoverageEnabled;
@end

#endif /* IDELaunchTestSchemeAction_h */
