//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.442, BuildTime: 2023-12-27T19:00:48Z)
//
//    - LC_BUILD_VERSION:  Platform: macOS, MinOS: 13.0, SDK: 14.0, Tool: ld (1022.1)
//    - LC_SOURCE_VERSION: 22551.0.0.0.0
//
#ifndef IDEWorkspaceWindowController_h
#define IDEWorkspaceWindowController_h
#import <Foundation/Foundation.h>


#include "DVTEditor-Protocol.h"
#include "DVTInvalidation-Protocol.h"
#include "DVTStatefulObject-Protocol.h"
#include "IDEEditorArea.h"
#include "IDEEditorAreaContainer-Protocol.h"
#include "IDEEditorDocument.h"
#include "IDETabbedWindowController-Protocol.h"
#include "IDEToolbarDelegate.h"
#include "IDEWorkspaceDFRController.h"
#include "IDEWorkspaceTabController.h"
#include "IDEWorkspaceWindow.h"
#include "IDEWorkspaceWindowController.h"



#include "_IDEWindowFullScreenSavedDebuggerTransitionValues.h"

@class DVTNotificationToken, DVTObservingToken, DVTPerformanceMetric, DVTStackBacktrace, DVTStateToken, IDEWorkspace, NSMutableArray, NSResponder, NSString, NSTimer, NSTouchBar, NSValue, IDEWorkspaceWindow;

@interface IDEWorkspaceWindowController : NSWindowController<NSTouchBarProvider, NSTouchBarDelegate, NSWindowDelegate, IDEEditorAreaContainer, DVTStatefulObject, DVTEditor, DVTInvalidation, IDETabbedWindowController> {
  /* instance variables */
  NSTimer *_springToFrontTimer;
  int _debugSessionState;
  NSResponder *_strongWindowFirstResponder;
  NSMutableArray *_stateChangeObservingTokens;
  IDEEditorDocument *_lastObservedEditorDocument;
  IDEToolbarDelegate *_toolbarDelegate;
  DVTObservingToken *_workspaceSimpleFilesFocusedObservingToken;
  DVTObservingToken *_workspaceRepresentingFilePathObservingToken;
  DVTObservingToken *_workspaceFinishedLoadingObservingToken;
  DVTObservingToken *_navigationTargetedEditorDocumentObservingToken;
  DVTObservingToken *_tabLabelObservingToken;
  DVTObservingToken *_firstResponderValidObservingToken;
  DVTNotificationToken *_deallocatingFirstResponderNotificationToken;
  DVTNotificationToken *_editorDocumentIsEditedNotificationToken;
  IDEWorkspace *_workspace;
  _IDEWindowFullScreenSavedDebuggerTransitionValues *_fullScreenSavedDebuggerTransitionValues;
  DVTPerformanceMetric *_newWindowControllerMetric;
  BOOL _inTotalCollapsedFrame;
  BOOL _isClosing;
  BOOL _didSetActiveWorkspaceTabController;
  BOOL _enteringFullScreenMode;
  BOOL _exitingFullScreenMode;
}

@property (readonly) NSTouchBar *touchBar;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (retain) IDEWorkspaceTabController *activeWorkspaceTabController;
@property (retain) DVTStateToken *stateToken;
@property BOOL shouldPerformWindowClose;
@property BOOL hasAttachedSheet;
@property (retain) DVTStackBacktrace *windowDidLoadBacktrace;
@property BOOL didRestoreFromStateSaving;
@property (retain) IDEWorkspaceDFRController *standardWorkspaceTouchBarController;
@property (retain) IDEWorkspaceDFRController *systemModalWorkspaceTouchBarController;
@property (readonly) BOOL shouldEnableToolbarItems;
@property (retain) NSValue *initialWindowFrameValue;
@property BOOL tabBarWasVisibleWithSingleTab;
@property BOOL isSettingUpWindowControllerClone;
@property (readonly) IDEWorkspaceWindowController *selectedTabWorkspaceWindowController;
@property (readonly) IDEWorkspaceWindow *workspaceWindow;
@property (nonatomic) BOOL showToolbar;
@property BOOL userWantsBreakpointsActivated;
@property (copy, nonatomic) NSString *stateSavingIdentifier;
@property (readonly) IDEEditorArea *editorArea;
@property (readonly) BOOL canRevertWithEmptyStateDictionary;
@property (readonly) BOOL canRevertStateBeforeLayout;
@property (readonly, nonatomic) BOOL valid;
@property (readonly) DVTStackBacktrace *invalidationBacktrace;
@property (retain) DVTStackBacktrace *creationBacktrace;

/* class methods */
+ (unsigned long long)supplimental23378396AssertionBehaviorForKeyValueObservationsAtEndOfEvent;
+ (id)workspaceWindowControllers;
+ (id)keyPathsForValuesAffectingShouldEnableToolbarItems;
+ (void)configureStateSavingObjectPersistenceByName:(id)name;
+ (long long)version;
+ (id)keyPathsForValuesAffectingEditorArea;
+ (id)workspaceWindowControllerForWindow:(id)window;
+ (void)initialize;
+ (unsigned long long)assertionBehaviorAfterEndOfEventForSelector:(SEL)selector;
+ (id)keyPathsForValuesAffectingUserWantsBreakpointsActivated;

/* instance methods */
- (id)systemModalFunctionBarForDebugSession;
- (id)_createSystemModalDebuggingFunctionBar;
- (id)_systemModalDebugControlsGroupItemWithIdentifier:(id)identifier;
- (void)updateSystemModalDebugBar;
- (id)_identifierForCurrentDebuggerControls;
- (void)updateDebuggerControlsGroupOnSystemModalDebugBar:(id)bar;
- (void)minimizeDebugBar;
- (id)ide_lastActiveEditor;
- (void)updateTouchBar;
- (id)makeTouchBar;
- (id)_touchBarForCurrentRunState;
- (id)_touchBarIdleSession;
- (id)_touchBarDebugSessionActive;
- (id)_editorRunGroupOverrideIdentifier;
- (BOOL)_debuggerItemShouldBeSuppressed;
- (id)touchBar:(id)bar makeItemForIdentifier:(id)identifier;
- (void)updateButtonsForDebugSessionState:(int)state;
- (void)workspaceTabDFRShouldBecomeVisible;
- (id)_runGroupItem;
- (id)_runItem;
- (id)runButtonPopoverBar;
- (id)runStopButtonFromToolbar;
- (void)_switchMenuButton:(id)button toItemWithSelector:(SEL)selector;
- (void)_invokeCurrentActionForButton:(id)button;
- (void)switchToAndRun:(id)run;
- (void)switchToAndTest:(id)test;
- (void)switchToAndProfile:(id)profile;
- (void)switchToAndAnalyze:(id)analyze;
- (void)runActiveRunContextWithGesture:(id)gesture;
- (void)standardDFRDebugBarStopAction:(id)action;
- (void)_registerWorkspaceWindowControllerObservations;
- (id)_standardDebugControlsItemWithIdentifier:(id)identifier;
- (void)_observeToolbarMenuButton:(id)button toUpdateButton:(id)button;
- (id)standardWorkspaceDFRController;
- (unsigned long long)_factoryTypeForTracing:(BOOL)tracing;
- (id)systemModalWorkspaceDFRController;
- (id)init;
- (void)_showWindowBehindWorkspaceWindow:(id)window;
- (void)_purgeOldIdentifiersFromUserDefaults;
- (void)windowDidLoad;
- (void)_observeInvalidationOfFirstResponder:(id)responder firstResponderAssignedBacktrace:(id)backtrace;
- (void)_startObservingTabBarVisibility;
- (void)windowDidBecomeMain:(id)main;
- (void)windowDidResignMain:(id)main;
- (void)windowWillBeginSheet:(id)sheet;
- (void)windowDidEndSheet:(id)sheet;
- (id)document;
- (void)_updateToolbarVisibilityForWorkspace:(id)workspace;
- (void)_updateToolbarVisibilityForFullScreen;
- (void)_updateToolbarConfiguration;
- (void)_updateToolbarConfigurationWithIdentifier:(id)identifier;
- (BOOL)wantsToolbarVisibleInFullScreen;
- (void)toggleToolbarShown:(id)shown;
- (void)_changeSizeForSimpleEditorWindowLayoutWithEditorDocumentURLOrNil:(id)nilNot forSingleFile:(BOOL)file workspaceTabController:(id)controller externalParameters:(id)parameters returningExpectedEditorRect:(struct CGRect *)rect;
- (id)_tabStateContextForTabController:(id)controller;
- (void)_convertToSimpleEditorWindowForDocumentURL:(id)url;
- (void)revertStateWithDictionary:(id)dictionary;
- (void)_configureStateSavingObservers;
- (void)commitStateToDictionary:(id)dictionary;
- (id)workspaceWindowControllersForTabGroup;
- (id)workspaceTabControllers;
- (void)_setupActiveWorkspaceTabController;
- (id)_uniqueNameForNewWorkspaceTabController;
- (BOOL)window:(id)window shouldRestoreStateForResponder:(id)responder;
- (id)supplementalTargetForAction:(SEL)action sender:(id)sender;
- (void)autocreateContexts:(id)contexts;
- (BOOL)validateMenuItem:(id)item;
- (void)newWindowForTab:(id)tab;
- (void)newTab:(id)tab;
- (void)newWindow:(id)window;
- (void)_selectTabForWindow;
- (void)_preventAutomaticallyAddingNewWindowControllerToTabGroup:(id)group duringBlock:(id /* block */)block;
- (id)_createSimpleEditorWindowControllerForDocumentURL:(id)url activate:(BOOL)activate;
- (id)_cloneNewWindowController;
- (id)_cloneWindowWithUserDefinedLabel:(id)label addToTabGroup:(BOOL)group activate:(BOOL)activate;
- (void)_setUpWindowController:(id)controller withUserDefinedLabel:(id)label addToTabGroup:(BOOL)group activate:(BOOL)activate;
- (BOOL)canCreateNewTab;
- (id)instantiateTabControllerAndRegisterForStateSavingWithName:(id)name inDocument:(id)document;
- (BOOL)_shouldCloseWindowEvaluatingOtherWindows;
- (void)_performCloseAll;
- (void)synchronizeWindowTitleWithDocumentName;
- (BOOL)isInFullScreenMode;
- (BOOL)isEnteringOrInFullScreenMode;
- (void)primitiveInvalidate;
- (BOOL)_isLastWindowControllerOfDocument;
- (void)_pushDefaultPrimaryEditorFrameSizes;
- (BOOL)windowShouldZoom:(id)zoom toFrame:(struct CGRect)frame;
- (struct CGSize)windowWillResize:(id)resize toSize:(struct CGSize)size;
- (void)windowDidResize:(id)resize;
- (void)windowDidMove:(id)move;
- (void)windowWillClose:(id)close;
- (void)workspaceWindowDidRecalculateKeyViewLoop:(id)loop;
- (BOOL)workspaceWindow:(id)window interceptSetCursorForMouseLocation:(struct CGPoint)location;
- (BOOL)workspaceWindow:(id)window interceptAddCursorRect:(struct CGRect)rect cursor:(id)cursor forView:(id)view;
- (void)workspaceWindow:(id)window willInvalidateCursorRectsForView:(id)view;
- (void)workspaceWindowWillInvalidateCursorRectsForViewsWithNoTrackingAreas:(id)areas;
- (id)_screenForWindow;
- (void)_scheduleSpringToFront;
- (void)_cancelSpringToFront;
- (void)_performSpringToFront;
- (BOOL)_isTargetApplicationActive;
- (void)_workaround8217584;
- (unsigned long long)window:(id)window willUseFullScreenPresentationOptions:(unsigned long long)options;
- (void)windowWillEnterFullScreen:(id)screen;
- (void)windowDidEnterFullScreen:(id)screen;
- (void)windowWillExitFullScreen:(id)screen;
- (void)windowDidExitFullScreen:(id)screen;
- (void)_makeWindowLookKeyWhenKey;
- (void)changeFromDebugSessionState:(int)state to:(int)to forLaunchSession:(id)session;
- (void)_updateTitleRepresentedPath;
- (void)_updateWindowTitle;
- (BOOL)commitEditingForAction:(int)action errors:(id)errors;
- (void)dicardEditing;
- (void)moveFocusToEditor:(id)editor;
@end

#endif /* IDEWorkspaceWindowController_h */
