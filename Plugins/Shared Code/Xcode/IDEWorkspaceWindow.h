//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.442, BuildTime: 2023-12-27T19:00:48Z)
//
//    - LC_BUILD_VERSION:  Platform: macOS, MinOS: 13.0, SDK: 14.0, Tool: ld (1022.1)
//    - LC_SOURCE_VERSION: 22551.0.0.0.0
//
#ifndef IDEWorkspaceWindow_h
#define IDEWorkspaceWindow_h
#import <Foundation/Foundation.h>

#include "IDETabbedWindow.h"
#include "IDEWorkspaceWindowController.h"


@class DVTObservingToken, NSString;

@interface IDEWorkspaceWindow : IDETabbedWindow<NSKeyedArchiverDelegate> {
  /* instance variables */
  DVTObservingToken *_workspaceFinishedLoadingObservingToken;
  BOOL _isTabOverviewVisible;
  BOOL _isFirstResponderDisabled;
}

@property BOOL _isOverridingEscapeInsteadOfExitingFullscreen;
@property (readonly, nonatomic) IDEWorkspaceWindowController *workspaceWindowController;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)lastActiveWorkspaceWindowController;
+ (void)disableMakeFirstResponderForWindow:(id)window duringBlock:(id /* block */)block;

/* instance methods */
- (BOOL)_attemptToCloseAllTabs:(id)tabs;
- (BOOL)validateMenuItem:(id)item;
- (void)sendEvent:(id)event;
- (void)endSheet:(id)sheet returnCode:(long long)code;
- (void)toggleToolbarShown:(id)shown;
- (void)renameCurrentTab:(id)tab;
- (void)toggleTabOverview:(id)overview;
- (void)toggleTabBar:(id)bar;
- (void)cancelOperation:(id)operation;
- (void)exitFullScreenMode:(id)mode;
- (void)close;
- (void)dvt_shouldDeallocate;
- (void)setDelegate:(id)delegate;
- (void)setWindowController:(id)controller;
- (void)becomeMainWindow;
- (void)dvt_closeActiveEditorTab:(id)tab;
- (BOOL)canBecomeKeyWindow;
- (BOOL)canBecomeMainWindow;
- (id)accessibilitySections;
- (void)recalculateKeyViewLoop;
- (BOOL)_keyViewRedirectionDisabled;
- (BOOL)makeFirstResponder:(id)responder;
- (void)disableMakeFirstResponderDuringBlock:(id /* block */)block;
- (void)_setCursorForMouseLocation:(struct CGPoint)location;
- (BOOL)_addCursorRect:(struct CGRect)rect cursor:(id)cursor forView:(id)view;
- (void)_invalidateCursorRectsForViewsWithNoTrackingAreas;
- (void)_invalidateCursorRectsForView:(id)view force:(BOOL)force;
@end

#endif /* IDEWorkspaceWindow_h */
