//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.442, BuildTime: 2023-12-27T19:00:48Z)
//
//    - LC_BUILD_VERSION:  Platform: macOS, MinOS: 13.0, SDK: 14.0, Tool: ld (1022.1)
//    - LC_SOURCE_VERSION: 22551.0.0.0.0
//
#ifndef IDESearchWindowController_h
#define IDESearchWindowController_h
#import <Foundation/Foundation.h>

#include "DVTCancellable-Protocol.h"
#include "DVTInvalidation-Protocol.h"
#include "IDESearchWindowLocation.h"
#include "IDESearchWindowSearchField.h"

@class DVTBorderedView, DVTSearchField, NSAppearance, NSArray, NSEvent, NSImage, NSImageView, NSNumber, NSString, NSView, NSVisualEffectView;

@interface IDESearchWindowController : NSWindowController {
  /* instance variables */
  NSView *_contentViewContainer;
  NSImageView *_magnifyingGlassImageView;
  NSVisualEffectView *_visualEffectView;
  NSArray *_searchAccessories;
  DVTBorderedView *_separatorView;
  NSObject<DVTInvalidation> *_terminationDisablingToken;
  NSObject<DVTInvalidation> *_dismissalObservations;
  NSNumber *_explicitContentWidth;
  NSNumber *_explicitContentHeight;
  IDESearchWindowLocation *_windowLocation;
  double _originalSearchRightPadding;
  double _originalSearchLeftPadding;
  double _originalWindowMinimumWidth;
  NSObject<DVTCancellable> *_appAppearanceObservation;
}

@property (nonatomic) BOOL pinned;
@property (readonly) BOOL isWindowInDarkMode;
@property (readonly) BOOL isSystemInDarkMode;
@property (readonly) NSString *searchText;
@property (retain, nonatomic) NSAppearance *explicitContentAppearance;
@property (readonly) NSImage *searchFieldIcon;
@property (readonly, weak) NSEvent *lastLeftMouseDownCausingImplicitDismiss;
@property (retain, nonatomic) NSView *contentView;
@property (readonly) BOOL isWindowOpen;
@property (readonly) DVTSearchField *searchField;

/* class methods */
+ (BOOL)isSystemInDarkMode;
+ (id)makeAccessoryButtonWithImage:(id)image alternateImage:(id)image target:(id)target action:(SEL)action;
+ (id)widthPreferenceSuffix;
+ (id)heightPreferenceSuffix;
+ (id)locationPreferenceSuffix;
+ (id)preferenceNameForBaseName:(id)name suffix:(id)suffix;

/* instance methods */
- (id)init;
- (void)dealloc;
- (id)window;
- (id)effectivePlaceholderStringForegroundColor;
- (void)setSearchFieldPlaceholder:(id)placeholder;
- (void)setSearchAccessories:(id)accessories;
- (double)searchAccessoryYAdjustment;
- (struct CGSize)unexpandedContentSize;
- (id)userDefaultsBaseName;
- (id)userDefaultsLocationName;
- (id)userDefaultsWidthName;
- (id)userDefaultsHeightName;
- (void)captureWindowLocationPreference;
- (void)captureWindowSizePreference;
- (void)windowDidMove:(id)move;
- (void)windowDidResize:(id)resize;
- (void)windowDidChangeScreen:(id)screen;
- (id)targetScreen;
- (struct CGRect)unexpandedFrame;
- (id)contentViewBundle;
- (void)windowDidLoad;
- (struct CGRect)frameForContentHeight:(double)height;
- (void)updateWindowMinimumSizeForContentHeight:(double)height;
- (void)sizeWindowForContentHeight:(double)height animate:(BOOL)animate display:(BOOL)display completionHandler:(id /* block */)handler;
- (void)readLayoutPreferences;
- (void)layoutWindowFromPreferencesPinningTopCenter:(BOOL)center animated:(BOOL)animated completionHandler:(id /* block */)handler;
- (id)openWindowTerminationDisablingReason;
- (void)windowWillClose:(id)close;
- (void)registerWindowDismissalObservers;
- (void)inferContextBeforeShowing;
- (void)showWindow;
- (id)contentViewNibName;
- (BOOL)isVerticallyResizable;
- (double)defaultContentHeight;
- (double)initialContentHeight;
- (double)minimumContentHeight;
- (double)minimumWidth;
- (id)effectiveChromeAppearance;
- (BOOL)supportsVibrantContent;
- (id)defaultContentAppearance;
- (id)effectiveContentAppearance;
- (void)pushAppearance;
- (BOOL)wantsSearchFieldSeparatorView;
- (void)prepareToShowWindow;
- (void)okAction:(id)action;
- (void)cancelAction:(id)action;
- (void)updateSearchWithText:(id)text;
- (void)searchAction:(id)action;
- (void)openSelectedContent;
- (long long)minimumInstantQueryLength;
- (void)controlTextDidChange:(id)change;
- (BOOL)control:(id)control textView:(id)view doCommandBySelector:(SEL)selector;
- (void)windowDidResignKey:(id)key;
- (struct CGRect)window:(id)window willPositionSheet:(id)sheet usingRect:(struct CGRect)rect;
@end

#endif /* IDESearchWindowController_h */
