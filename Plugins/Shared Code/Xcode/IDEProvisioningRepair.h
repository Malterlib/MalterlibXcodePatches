//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.442, BuildTime: 2023-12-27T19:00:48Z)
//
//    - LC_BUILD_VERSION:  Platform: macOS, MinOS: 13.0, SDK: 14.0, Tool: ld (1022.1)
//    - LC_SOURCE_VERSION: 22551.0.0.0.0
//
#ifndef IDEProvisioningRepair_h
#define IDEProvisioningRepair_h
#import <Foundation/Foundation.h>

#include "DVTInvalidation-Protocol.h"
#include "IDEProvisioningLedgerEntry.h"
#include "IDEProvisioningRepairContext.h"
#include "IDEProvisioningRepairDelegate-Protocol.h"
#include "IDEProvisioningUserAction.h"
#include "IDEProvisioningUserActionDelegate-Protocol.h"
#include "IDERepairable-Protocol.h"

@class DVTDispatchLock, DVTStackBacktrace, NSArray, NSError, NSString;

@interface IDEProvisioningRepair : NSObject<DVTInvalidation, IDEProvisioningUserActionDelegate> {
  /* instance variables */
  IDEProvisioningLedgerEntry *_ledgerEntry;
  DVTDispatchLock *_userActionLock;
  BOOL _wantsDiagnoseProblemLedgerEntry;
}

@property (copy, nonatomic) NSArray *steps;
@property BOOL executing;
@property (retain, nonatomic) IDEProvisioningUserAction *userAction;
@property (retain, nonatomic) NSError *error;
@property (readonly, nonatomic) NSObject<IDEProvisioningRepairDelegate> *delegate;
@property (readonly, nonatomic) IDEProvisioningRepairContext *context;
@property (readonly, nonatomic) NSObject<IDERepairable> *repairable;
@property (readonly, nonatomic) BOOL waitingForUserAction;
@property (readonly, nonatomic) BOOL valid;
@property (readonly) DVTStackBacktrace *invalidationBacktrace;
@property (retain) DVTStackBacktrace *creationBacktrace;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (void)initialize;

/* instance methods */
- (id)initWithDelegate:(id)delegate context:(id)context;
- (void)primitiveInvalidate;
- (void)execute;
- (void)_executeSteps:(id)steps;
- (id)_executionDiagnosticLedgerEntry;
- (void)_repairDidFinishWithUserAction:(id)action error:(id)error;
- (BOOL)isWaitingForUserAction;
- (void)_waitOnUserAction:(id)action;
- (void)_closeLedgerEntriesWithError:(id)error;
- (void)userActionWasAuthorized:(id)authorized;
- (void)userActionDidBegin:(id)begin;
- (void)userActionDidFinish:(id)finish;
- (void)userAction:(id)action didFailWithError:(id)error;
- (BOOL)isExecuting;
@end

#endif /* IDEProvisioningRepair_h */
