//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.442, BuildTime: 2023-12-27T19:00:48Z)
//
//    - LC_BUILD_VERSION:  Platform: macOS, MinOS: 13.0, SDK: 14.0, Tool: ld (1022.1)
//    - LC_SOURCE_VERSION: 22551.0.0.0.0
//
#ifndef IDEDocumentController_h
#define IDEDocumentController_h
#import <Foundation/Foundation.h>

#include "IDEContainerErrorPresenter-Protocol.h"
#include "IDEContainerReloadingDelegate-Protocol.h"
#include "IDEContainerUnlockingDelegate-Protocol.h"
#include "IDEInitialization-Protocol.h"
#include "IDEVersionedFileManagerDelegate-Protocol.h"

@class NSArray, NSMapTable, NSString;
@protocol IDEVersionedFileManagerDelegate;

@interface IDEDocumentController : NSDocumentController<IDEVersionedFileManagerDelegate, IDEInitialization, IDEContainerErrorPresenter, IDEContainerReloadingDelegate, IDEContainerUnlockingDelegate, NSMenuDelegate> {
  /* instance variables */
  NSMapTable *_editorDocumentByFilePath;
}

@property unsigned long long pendingOpenRequestsCount;
@property (readonly) NSArray *workspaceDocuments;
@property (readonly) NSArray *editorDocuments;
@property (readonly) NSArray *editorDocumentsToSave;
@property (readonly) NSArray *editorDocumentsToManuallySave;
@property BOOL isClosingAllDocuments;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (void)initialize;
+ (BOOL)ide_initializeWithOptions:(unsigned long long)options error:(id *)error;
+ (id)sharedDocumentController;
+ (id)_openDocuments;
+ (void)retainEditorDocument:(id)document;
+ (BOOL)_closeDocumentIfNeeded:(id)needed;
+ (void)releaseEditorDocument:(id)document;
+ (BOOL)isPerformingDocumentTransaction;
+ (void)performDocumentTransaction:(id /* block */)transaction;
+ (id)_newEditorDocumentWithClass:(Class)class forURL:(id)url withContentsOfURL:(id)url ofType:(id)type extension:(id)extension error:(id *)error;
+ (id)_retainedEditorDocumentForURL:(id)url type:(id)type error:(id *)error;
+ (id)retainedEditorDocumentForDocumentLocation:(id)location forUseWithWorkspaceDocument:(id)document error:(id *)error;
+ (id)retainedEditorDocumentForDocumentURL:(id)url documentType:(id)type forUseWithWorkspaceDocument:(id)document error:(id *)error;
+ (id)retainedEditorDocumentForNavigableItem:(id)item forUseWithWorkspaceDocument:(id)document error:(id *)error;
+ (id)editorDocumentForURL:(id)url;
+ (id)editorDocumentForFilePath:(id)path;
+ (id)editorDocumentForNavigableItem:(id)item;
+ (id)workspaceDocumentForWorkspace:(id)workspace;
+ (id)_THREAD_allEditorDocumentExtensions;
+ (id)_THREAD_allEditorDocumentURLSchemeExtensions;
+ (id)_THREAD_cachedBestEditorDocumentExtensionForKey:(id)key valueWasCached:(BOOL *)cached;
+ (void)_THREAD_cacheBestEditorDocumentExtension:(id)extension forKey:(id)key;
+ (BOOL)_THREAD_type:(id)thread_type role:(int)role isPreferableToType:(id)type role:(int)role;
+ (BOOL)_isAllowedToCreateEditorDocumentForFileDataType:(id)type;
+ (id)_editorDocumentExtensionsForOpenAsWhichSupportURLScheme:(id)urlscheme documentType:(id)type editorCategories:(id)categories;
+ (id)_documentExtensionForNavigableItem:(id)item;
+ (id)_bestEditorDocumentExtensionForDocumentClass:(Class)class urlScheme:(id)scheme supportingDocumentType:(id)type withEditorCategories:(id)categories shouldPreferExtension:(BOOL *)extension;
+ (id)_readableTypesForDocumentClass:(Class)class;
+ (id)_urlSchemesForEditorDocumentExtension:(id)extension;
+ (id)_previewEditorDocumentExtensionsForEditorDocumentExtension:(id)extension;
+ (BOOL)_checkEditorDocumentExtension:(id)extension matchesURLScheme:(id)urlscheme;
+ (BOOL)_checkEditorDocumentExtension:(id)extension matchesEditorCategories:(id)categories;
+ (void)_testAllURLSchemes;
+ (void)_enumerateDocumentExtensionsMatchingURLScheme:(id)urlscheme fileDataType:(id)type withEditorCategories:(id)categories matchBlock:(id /* block */)block;
+ (BOOL)_isValidDocumentExtensionIdentifier:(id)identifier supportingURLScheme:(id)urlscheme documentType:(id)type withEditorCategories:(id)categories;
+ (BOOL)_isDocumentExtensionPreferred:(id)preferred over:(id)over;
+ (id)_THREAD_bestEditorDocumentExtensionSupportingURLScheme:(id)urlscheme documentType:(id)type withEditorCategories:(id)categories;
+ (id)_THREAD_editorDocumentExtensionForURLScheme:(id)urlscheme documentType:(id)type withEditorCategories:(id)categories;
+ (id)editorDocumentExtensionForURLScheme:(id)urlscheme fileDataType:(id)type editorCategories:(id)categories;
+ (id)editorDocumentExtensionForNavigableItem:(id)item editorCategories:(id)categories;
+ (id)editorDocumentExtensionForDocumentURL:(id)url fileDataType:(id)type editorCategories:(id)categories;
+ (id)_typeForNonFileURLScheme:(id)urlscheme;
+ (id)_typeForContentsOfURL:(id)url;
+ (id)_locationToShowInEditorFromDocumentLocations:(id)locations;
+ (Class)_THREAD_cachedDocumentClassForExtension:(id)extension;
+ (void)_THREAD_cacheDocumentClass:(Class)class forExtension:(id)extension;
+ (Class)_THREAD_editorDocumentClassForURLScheme:(id)urlscheme documentType:(id)type extension:(id *)extension;
+ (BOOL)_suppressRecentWorkspaceDocuments;
+ (BOOL)_isWorkspaceDocumentURL:(id)url;
+ (BOOL)_isWorkspaceWrappingDocumentURL:(id)url;
+ (void)restoreWindowWithIdentifier:(id)identifier state:(id)state completionHandler:(id /* block */)handler;
+ (void)validateOpenAsMenuItem:(id)item forViewController:(id)controller;
+ (id)_validOpenAsExtensionsForViewController:(id)controller;
+ (void)_setOpenAsContextMenu:(id)menu withViewController:(id)controller;
+ (id)schemeForDocumentURL:(id)url;
+ (id)_openAsDocumentExtensionsForURLScheme:(id)urlscheme fileDataTypes:(id)types editorCategories:(id)categories;
+ (BOOL)_shouldOpenItemAtURLWithSynchronousQuarantinePrompt:(id)prompt documentType:(id)type;
+ (id)_documentDisplayNameForDocumentType:(id)type;
+ (id)_informativeTextForQuarantineProperties:(id)properties;
+ (void)_THREAD_verifyMenuItemsForDocumentExtension:(id)extension menuExtensionKey:(id)key matchItemsAtIndex:(id)index checkNoItemsMatch:(id)match mistakesDescriptionBlock:(id /* block */)block;
+ (void)_THREAD_verifyAssistantMatchesGearMenuItemsForDocumentExtension:(id)extension mistakesDescriptionBlock:(id /* block */)block;
+ (void)_THREAD_verifyMenuItemsForDocumentExtension:(id)extension editorDocumentToGeniusFinderDictionary:(id)dictionary;
+ (id)_THREAD_editorDocumentIdentifierToFirstGeniusFinderDictionary;
+ (id)_THREAD_editorModeCompatibleEditorIDsForDocumentExtension:(id)extension;
+ (void)_THREAD_verifyEditorModeCompatibleEditorIDsForDocumentExtension:(id)extension;
+ (void)_THREAD_verifyMenuItemsForDocumentExtensions:(id)extensions;

/* instance methods */
- (id)init;
- (id)defaultType;
- (BOOL)_anyDocumentClassUsesUbiquitousStorage;
- (id)documentForURL:(id)url;
- (void)openDocument:(id)document;
- (void)beginOpenPanelWithCompletionHandler:(id /* block */)handler;
- (id)_openUntitledWorkspaceDocumentAndDisplay:(BOOL)display simpleFilesFocused:(BOOL)focused forSingleFile:(BOOL)file hostsOnlyPlayground:(BOOL)playground editorDocumentURLOrNil:(id)nilNot externalParameters:(id)parameters error:(id *)error;
- (id)openUntitledWorkspaceDocumentAndDisplay:(BOOL)display error:(id *)error;
- (void)asyncSaveUntitledWorkspaceDocument:(id)document forProjectDocument:(id)document completionHandler:(id /* block */)handler;
- (void)saveUntitledWorkspaceDocumentAsynchronously:(id)asynchronously forProjectDocument:(id)document completionHandler:(id /* block */)handler;
- (void)reopenDocumentForURL:(id)url withContentsOfURL:(id)url display:(BOOL)display completionHandler:(id /* block */)handler;
- (id)_createNewDocumentForDebuggingOfExecutableURL:(id)url completionHandler:(id /* block */)handler;
- (id)typeForContentsOfURL:(id)url error:(id *)error;
- (BOOL)_isWorkspaceWindow:(id)window forWorkspaces:(id)workspaces;
- (id)_frontmostWorkspaceWindowForWorkspaces:(id)workspaces;
- (id)_frontmostWorkspaceWindow;
- (id)_frontmostWorkspaceWindowPassingTest:(id /* block */)test;
- (id)_addPath:(id)path toChildrenOfWorkspace:(id)workspace;
- (void)_openWorkspaceDocumentForWorkspace:(id)workspace display:(BOOL)display completionHandler:(id /* block */)handler;
- (id)makeDocumentWithContentsOfURL:(id)url ofType:(id)type error:(id *)error;
- (void)_openWrappingContainerDocument:(id)document displayDocument:(BOOL)document completionHandler:(id /* block */)handler;
- (void)_promptToOpenWorkspaceWithCompletionBlock:(id /* block */)block;
- (BOOL)_workspace:(id)_workspace topLevelChildrenMatches:(id)matches;
- (id)_frontmostSimpleFilesFocusedWorkspaceWindowForTopLevelFilePaths:(id)paths;
- (void)_openSimpleFileDocumentLocations:(id)locations display:(BOOL)display externalParameters:(id)parameters completionBlock:(id /* block */)block;
- (void)_openSimpleFileFolderDocumentLocations:(id)locations displayDocument:(BOOL)document isSingleFile:(BOOL)file externalParameters:(id)parameters completionBlock:(id /* block */)block;
- (void)_openSimpleFileDocumentLocation:(id)location inWorkspaceDocument:(id)document display:(BOOL)display externalParameters:(id)parameters completionBlock:(id /* block */)block;
- (void)_openSimpleFileWorkspaceWrapperFolderWithoutWorkspaceDocumentLocation:(id)location displayDocument:(BOOL)document externalParameters:(id)parameters completionBlock:(id /* block */)block;
- (void)_openSimpleFileResultBundleFolderLocations:(id)locations displayDocument:(BOOL)document externalParameters:(id)parameters completionBlock:(id /* block */)block;
- (id)_workspacePlaygroundOrProjectDocumentLocationsInFolderURL:(id)url;
- (void)_openProjectsPlaygroundsAndWorkspaces:(id)workspaces display:(BOOL)display externalParameters:(id)parameters completionHandler:(id /* block */)handler;
- (void)_openProjectsPlaygroundsAndWorkspaces:(id)workspaces display:(BOOL)display openedDocuments:(id)documents simpleFileDocumentLocations:(id)locations externalParameters:(id)parameters completionHandler:(id /* block */)handler;
- (void)_openDocumentsForDocumentLocations:(id)locations display:(BOOL)display externalParameters:(id)parameters completionHandler:(id /* block */)handler;
- (void)asyncOpenDocumentLocation:(id)location display:(BOOL)display completionHandler:(id /* block */)handler;
- (void)openDocumentLocationAsynchronously:(id)asynchronously display:(BOOL)display completionHandler:(id /* block */)handler;
- (void)openDocumentWithContentsOfURL:(id)url display:(BOOL)display completionHandler:(id /* block */)handler;
- (id)openUntitledDocumentAndDisplay:(BOOL)display error:(id *)error;
- (id)openDocumentWithContentsOfURL:(id)url display:(BOOL)display error:(id *)error;
- (void)openDocumentsAsynchronouslyWithContentsOfURLs:(id)urls display:(BOOL)display externalParameters:(id)parameters completionHandler:(id /* block */)handler;
- (void)_continueOpeningURLsInWorkspaces:(id)workspaces initiallyOpenedDocuments:(id)documents display:(BOOL)display externalParameters:(id)parameters completionHandler:(id /* block */)handler;
- (void)asyncOpenDocumentsWithContentsOfURLs:(id)urls display:(BOOL)display completionHandler:(id /* block */)handler;
- (id)openDocumentWithContentsOfURL:(id)url display:(BOOL)display;
- (void)_openDocumentsWithContentsOfURLs:(id)urls presentErrors:(BOOL)errors completionHandler:(id /* block */)handler;
- (void)_printDocumentsWithContentsOfURLs:(id)urls settings:(id)settings showPrintPanels:(BOOL)panels completionHandler:(id /* block */)handler;
- (void)_printDocumentsWithContentsOfUnprocessedURLs:(id)urls settings:(id)settings showPrintPanels:(BOOL)panels completionHandler:(id /* block */)handler;
- (void)_editorDocument:(id)document didPrint:(BOOL)print contextInfo:(void *)info;
- (Class)_THREAD_documentClassForURLScheme:(id)urlscheme documentType:(id)type extension:(id *)extension;
- (Class)documentClassForType:(id)type;
- (void)_startObservingEditorDocument:(id)document keyPath:(id)path associationKey:(id)key;
- (void)_endObservingEditorDocument:(id)document keyPath:(id)path associationKey:(id)key;
- (id)documents;
- (void)addDocument:(id)document;
- (void)removeDocument:(id)document;
- (id)editedEditorDocuments;
- (BOOL)_saveEditorDocuments:(id)documents forOperation:(unsigned long long)operation error:(id *)error;
- (void)_saveEditorDocuments:(id)documents forOperation:(unsigned long long)operation completionBlock:(id /* block */)block;
- (void)autosaveInPlaceAllEditorDocumentsAsynchronouslyWithCompletionBlock:(id /* block */)block;
- (void)saveAllEditorDocumentsAsynchronouslyWithCompletionBlock:(id /* block */)block;
- (void)saveAllEditorDocuments:(id)documents;
- (void)_checkAndCloseAllDocumentsStartingWith:(id)with shouldCloseDocuments:(BOOL)documents closeAllContext:(void *)context;
- (void)_dvt_closeAllDocumentsWithDelegate:(id)delegate didCloseAllSelector:(SEL)selector shouldCloseAutosavingDocuments:(BOOL)documents contextInfo:(void *)info;
- (void)closeAllDocumentsWithDelegate:(id)delegate didCloseAllSelector:(SEL)selector contextInfo:(void *)info;
- (void)reviewUnsavedDocumentsWithAlertTitle:(id)title cancellable:(BOOL)cancellable delegate:(id)delegate didReviewAllSelector:(SEL)selector contextInfo:(void *)info;
- (BOOL)validateUserInterfaceItem:(id)item;
- (id)documentClassNames;
- (id)currentDirectory;
- (id)_setupOpenPanel;
- (void)runOpenPanelWithCompletionBlock:(id /* block */)block;
- (void)_runOpenPanelWithURLsFromRunningOpenPanel:(id)panel completionBlock:(id /* block */)block;
- (BOOL)_applicationShouldTerminate;
- (id)fileExtensionsFromType:(id)type;
- (id)displayNameForType:(id)type;
- (id)_recentEditorDocumentURLs;
- (id)_recentWorkspaceDocumentURLs;
- (id)_recentWorkspaceDocumentInfosAsyncUpdate:(id /* block */)update;
- (id)_recentDocumentRecordsKeyForMenuTag:(long long)tag;
- (void)noteNewRecentDocumentURL:(id)url;
- (id)documentURLsForIDEApplicationRestorableState;
- (void)openDocumentURLsFromIDEApplicationRestorableState:(id)state completionHandler:(id /* block */)handler;
- (void)_openNextDocumentURLFromIDEApplicationRestorableState:(id)state nextIndex:(long long)index completionHandler:(id /* block */)handler;
- (void)_openAs:(id)as;
- (id)_viewControllerForOpenAsMenu:(id)menu;
- (void)menuNeedsUpdate:(id)update;
- (void)_addOpenAsMenuItemsForCategoryExtensions:(id)extensions toMenu:(id)menu;
- (void)_splitEditorExtensions:(id)extensions intoPreferred:(id)preferred andNonPreferred:(id)preferred;
- (id)_getEditorDocumentsForFilePaths:(id)paths editedDocuments:(id *)documents;
- (id)_retainedContainersForFilePaths:(id)paths;
- (id)_wrappedWorkspacesForContainers:(id)containers;
- (BOOL)canRemoveItemsAtFilePaths:(id)paths completionBlockDispatchQueue:(id *)queue completionBlock:(id /* block */ *)block;
- (void)willRemoveItemsAtFilePaths:(id)paths completionBlock:(id /* block */)block;
- (void)_asyncRemoveItemsAtFilePaths:(id)paths completionBlock:(id /* block */)block;
- (void)asyncRemoveItemsAtFilePaths:(id)paths completionBlock:(id /* block */)block;
- (BOOL)canMoveItemsAtFilePaths:(id)paths toFilePaths:(id)paths completionBlockDispatchQueue:(id *)queue completionBlock:(id /* block */ *)block;
- (void)moveItemAtFilePathToTrash:(id)trash completionBlock:(id /* block */)block;
- (long long)handleSaveError:(id)error forContainer:(id)container withAction:(long long)action;
- (BOOL)attemptRecoveryFromError:(id)error optionIndex:(unsigned long long)index;
- (void)attemptRecoveryFromError:(id)error optionIndex:(unsigned long long)index delegate:(id)delegate didRecoverSelector:(SEL)selector contextInfo:(void *)info;
- (long long)responseToExternalChangesToBackingFileForContainer:(id)container fileWasRemoved:(BOOL)removed;
- (void)container:(id)container attemptToUnlockItems:(id)items workspace:(id)workspace completionQueue:(id)queue completionBlock:(id /* block */)block;
- (id)unsavedEditorDocumentFilePaths;
- (void)_structureEditingWillRemoveContainerItems:(id)items;
@end

#endif /* IDEDocumentController_h */
